{"version":3,"sources":["webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/registration/registration.component.ts","webpack:///src/app/modules/auth/registration/registration.component.html","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/logout/logout.component.ts","webpack:///src/app/modules/auth/logout/logout.component.html","webpack:///src/app/modules/auth/auth.component.ts","webpack:///src/app/modules/auth/auth.component.html","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.ts","webpack:///src/app/modules/auth/forgot-password/forgot-password.component.html","webpack:///node_modules/angularx-social-login/__ivy_ngcc__/fesm2015/angularx-social-login.js","webpack:///src/app/modules/auth/auth-routing.module.ts"],"names":["AuthModule","provide","useValue","autoLogin","providers","id","PROVIDER_ID","provider","declarations","imports","RegistrationComponent","fb","authService","router","unsubscribe","isLoading$","currentUserValue","navigate","initForm","registrationForm","controls","group","first_name","compose","required","minLength","maxLength","last_name","email","password","cPassword","agree","validator","MatchPassword","hasError","result","Object","keys","f","forEach","key","value","console","log","newUser","password_confirmation","registrationSubscr","registration","pipe","subscribe","user","push","sb","submit","selector","templateUrl","styleUrls","LoginComponent","route","socialAuthService","appName","defaultAuth","then","returnUrl","snapshot","queryParams","toString","loginForm","loginSub","login","signIn","res","fbLogin","toPromise","userRes","signInWithFB","LogoutComponent","logout","AuthComponent","today","Date","ErrorStates","ForgotPasswordComponent","errorState","NotSubmitted","errorStates","forgotPasswordForm","forgotPasswordSubscr","forgotPassword","NoError","HasError","BaseLoginProvider","src","onload","parentElement","document","getElementById","signInJS","createElement","async","head","appendChild","SocialUser","GoogleLoginProvider","clientId","initOptions","scope","Promise","resolve","reject","loadScript","gapi","load","auth2","init","assign","client_id","err","loginStatusOptions","options","isSignedIn","get","profile","currentUser","getBasicProfile","authResponse","getAuthResponse","getId","name","getName","getEmail","photoUrl","getImageUrl","firstName","getGivenName","lastName","getFamilyName","response","resolveUser","authToken","access_token","idToken","id_token","refreshToken","reloadAuthResponse","signInOptions","offlineAccess","offline_access","promise","grantOfflineAccess","code","authorizationCode","token","backendToken","closed","revoke","signOutPromise","disconnect","signOut","SocialAuthService","config","Map","_user","_authState","initialized","_initState","initialize","asObservable","undefined","onError","error","item","set","all","Array","from","values","map","loginStatusPromises","loggedIn","getLoginStatus","next","debug","complete","providerId","ERR_NOT_INITIALIZED","ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN","providerObject","ERR_LOGIN_PROVIDER_NOT_FOUND","ERR_NOT_LOGGED_IN","ɵfac","SocialAuthService_Factory","t","ɵprov","factory","ctorParameters","type","decorators","args","SocialLoginModule","parentModule","Error","ngModule","ɵmod","ɵinj","SocialLoginModule_Factory","ngJitMode","DummyLoginProvider","dummy","DEFAULT_USER","FacebookLoginProvider","locale","fields","version","FB","appId","autoLogAppEvents","cookie","xfbml","status","api","fbUser","accessToken","AmazonLoginProvider","scope_data","essential","redirect_uri","location","origin","amazonRoot","body","window","onAmazonLoginReady","amazon","Login","setClientId","retrieveToken","retrieveProfile","success","CustomerId","Name","PrimaryEmail","authorize","persistToken","clearToken","message","localStorage","setItem","getItem","removeItem","VKLoginProvider","VK_API_URL","VK_API_GET_USER","VK","apiId","getLoginStatusInternal","signInInternal","Auth","loginResponse","getUser","session","mid","sid","userId","Api","call","user_id","v","userResponse","createUser","photo_max","ProtocolMode","COMMON_AUTHORITY","MicrosoftLoginProvider","authority","scopes","knownAuthorities","protocolMode","AAD","clientCapabilities","cacheLocation","_a","auth","redirectUri","cache","_instance","msal","PublicClientApplication","e","meRequest","XMLHttpRequest","onreadystatechange","readyState","userInfo","JSON","parse","responseText","idTokenClaims","account","username","givenName","surname","open","setRequestHeader","send","accounts","getAllAccounts","length","ssoSilent","loginHint","getSocialUser","loginPopup","_b","postLogoutRedirectUri","logout_redirect_uri","href","routes","path","component","children","redirectTo","pathMatch","data","pathname","AuthRoutingModule","forChild","exports"],"mappings":"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","file":"modules-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { AuthComponent } from './auth.component';\nimport { TranslationModule } from '../i18n/translation.module';\nimport { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\n\nimport {\n  // GoogleLoginProvider,\n  FacebookLoginProvider\n} from 'angularx-social-login';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RegistrationComponent,\n    ForgotPasswordComponent,\n    LogoutComponent,\n    AuthComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslationModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          // {\n          //   id: GoogleLoginProvider.PROVIDER_ID,\n          //   provider: new GoogleLoginProvider(\n          //     'clientId'\n          //   )\n          // },\n          {\n            id: FacebookLoginProvider.PROVIDER_ID,\n            provider: new FacebookLoginProvider('223546759563819')\n          }\n        ]\n      } as SocialAuthServiceConfig,\n    }\n  ]\n})\nexport class AuthModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription, Observable } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { Router } from '@angular/router';\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\nimport { UserModel } from '../_models/user.model';\nimport { first, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n  registrationForm: FormGroup;\n  hasError: boolean;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.registrationForm.controls;\n  }\n\n  initForm() {\n    this.registrationForm = this.fb.group(\n      {\n        first_name: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        last_name: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        email: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.email,\n            Validators.minLength(3),\n            Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n          ]),\n        ],\n        password: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(100),\n          ]),\n        ],\n        cPassword: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(8),\n            Validators.maxLength(100),\n          ]),\n        ],\n        agree: [false, Validators.compose([Validators.required])],\n      },\n      {\n        validator: ConfirmPasswordValidator.MatchPassword,\n      }\n    );\n  }\n\n  submit() {\n    this.hasError = false;\n    const result: any = {};\n    Object.keys(this.f).forEach(key => {\n      result[key] = this.f[key].value;\n    });\n\n    console.log(result);\n    const {email, first_name, last_name, password, cPassword} = result;\n    const newUser: any = {\n      email,\n      first_name,\n      last_name,\n      password,\n      password_confirmation: cPassword\n    };\n\n    // const newUser = new UserModel();\n    // newUser.setUser(result);\n    const registrationSubscr = this.authService\n      .registration(newUser)\n      .pipe(\n        first()\n      )\n      .subscribe((user: UserModel) => {\n        console.log('registrationSubscr:', user);\n        if (user) {\n          this.router.navigate(['/']);\n        } else {\n          this.hasError = true;\n        }\n      });\n    this.unsubscribe.push(registrationSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n}\n","<!--begin::Signup-->\n<div class=\"login-form login-signup\">\n  <!--begin::Form-->\n  <form\n    class=\"form\"\n    novalidate=\"novalidate\"\n    id=\"kt_login_signup_form\"\n    [formGroup]=\"registrationForm\"\n    (ngSubmit)=\"submit()\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Sign Up\n      </h3>\n      <p class=\"text-muted font-weight-bold font-size-h4\">\n        Enter your details to create your account\n      </p>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"hasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The registration details are incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group form-row\">\n      <div class=\"col-md-6\">\n        <label class=\"font-size-h6 font-weight-bolder text-dark\">First Name</label>\n        <input\n                class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n                type=\"text\"\n                name=\"first_name\"\n                formControlName=\"first_name\"\n                placeholder=\"First name\"\n                autocomplete=\"off\"\n                [ngClass]=\"{\n          'is-invalid': registrationForm.controls['first_name'].invalid\n        }\"\n        />\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'first_name is required',\n          control: registrationForm.controls['first_name']\n        }\"\n        ></ng-container>\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'first_name should have at least 3 symbols',\n          control: registrationForm.controls['first_name']\n        }\"\n        ></ng-container>\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'first_name should have maximum 100 symbols',\n          control: registrationForm.controls['first_name']\n        }\"\n        ></ng-container>\n      </div>\n      <div class=\"col-md-6\">\n        <label class=\"font-size-h6 font-weight-bolder text-dark\">Last Name</label>\n        <input\n                class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n                type=\"text\"\n                name=\"last_name\"\n                formControlName=\"last_name\"\n                placeholder=\"Last name\"\n                autocomplete=\"off\"\n                [ngClass]=\"{\n          'is-invalid': registrationForm.controls['last_name'].invalid\n        }\"\n        />\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'last_name is required',\n          control: registrationForm.controls['last_name']\n        }\"\n        ></ng-container>\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'last_name should have at least 3 symbols',\n          control: registrationForm.controls['last_name']\n        }\"\n        ></ng-container>\n        <ng-container\n                [ngTemplateOutlet]=\"formError\"\n                [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'last_name should have maximum 100 symbols',\n          control: registrationForm.controls['last_name']\n        }\"\n        ></ng-container>\n      </div>\n\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{ 'is-invalid': registrationForm.controls['email'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Email should have at least 3 symbols',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: registrationForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n        >Password</label\n      >\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        formControlName=\"password\"\n        autocomplete=\"off\"\n        [ngClass]=\"{\n          'is-invalid': registrationForm.controls['password'].invalid\n        }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Password is required',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Password should have at least 8 symbols',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Password should have maximum 100 symbols',\n          control: registrationForm.controls['password']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n        >Confirm Password</label\n      >\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"password\"\n        placeholder=\"Confirm password\"\n        name=\"cPassword\"\n        autocomplete=\"off\"\n        formControlName=\"cPassword\"\n        [ngClass]=\"{\n          'is-invalid': registrationForm.controls['cPassword'].invalid\n        }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Confirm Password is required',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Confirm Password should have at least 8 symbols',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Confirm Password should have maximum 100 symbols',\n          control: registrationForm.controls['cPassword']\n        }\"\n      ></ng-container>\n      <ng-container\n        *ngIf=\"\n          registrationForm.controls['cPassword'].errors &&\n          registrationForm.controls['cPassword'].errors.ConfirmPassword\n        \"\n      >\n        <div class=\"fv-plugins-message-container\">\n          <div class=\"fv-help-block\">\n            'Passsword' and 'Confirm Password' didn't match.\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"checkbox mb-0\">\n        <input type=\"checkbox\" formControlName=\"agree\" name=\"agree\" />&nbsp;I\n        Agree the&nbsp;<a\n          href=\"https://keenthemes.com/metronic/?page=faq\"\n          target=\"_blank\"\n          >terms and conditions</a\n        >.&nbsp;\n        <span></span>\n      </label>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group d-flex flex-wrap pb-lg-0 pb-3\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_signup_submit\"\n        [disabled]=\"\n          registrationForm.invalid || !registrationForm.controls['agree'].value\n        \"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\n      >\n        Submit\n      </button>\n      <a\n        routerLink=\"/auth/login\"\n        type=\"button\"\n        id=\"kt_login_signup_cancel\"\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\n      >\n        Cancel\n      </a>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n  </form>\n  <!--end::Form-->\n</div>\n<!--end::Signup-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","<!--begin::Signin-->\n<div class=\"login-form login-signin\">\n  <!--begin::Form-->\n  <form\n    class=\"form\"\n    [formGroup]=\"loginForm\"\n    novalidate=\"novalidate\"\n    id=\"kt_login_signin_form\"\n    (ngSubmit)=\"submit()\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Welcome to {{ appName }}\n      </h3>\n      <span class=\"text-muted font-weight-bold font-size-h4\"\n        >New Here?\n        <a\n          routerLink=\"/auth/registration\"\n          id=\"kt_login_signup\"\n          class=\"text-primary font-weight-bolder\"\n          >{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a\n        >\n      </span>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert info-->\n    <!--{<ng-container *ngIf=\"!hasError\">\n      <div class=\"mb-10 alert alert-custom alert-light-info alert-dismissible\">\n        <div class=\"alert-text\">\n          Use account <strong>{{ defaultAuth.email }}</strong> and password\n          <strong>{{ defaultAuth.password }}</strong> to continue.\n        </div>\n      </div>\n    </ng-container>}-->\n    <!-- end::Alert info-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"hasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The login details are incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <label class=\"font-size-h6 font-weight-bolder text-dark\">Email</label>\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\n        type=\"email\"\n        name=\"email\"\n        formControlName=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['email'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>      \n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minLength',\n          message: 'Email should have at least 3 symbols',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: loginForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group\">\n      <div class=\"d-flex justify-content-between mt-n5\">\n        <label class=\"font-size-h6 font-weight-bolder text-dark pt-5\"\n          >Password</label\n        >\n        <a\n          routerLink=\"/auth/forgot-password\"\n          class=\"text-primary font-size-h6 font-weight-bolder text-hover-primary pt-5\"\n          id=\"kt_login_forgot\"\n        >\n          Forgot Password ?\n        </a>\n      </div>\n\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg\"\n        type=\"password\"\n        name=\"password\"\n        autocomplete=\"off\"\n        formControlName=\"password\"\n        [ngClass]=\"{ 'is-invalid': loginForm.controls['password'].invalid }\"\n      />\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Password is required',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minlength',\n          message: 'Password should have at least 3 symbols',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Password should have maximum 100 symbols',\n          control: loginForm.controls['password']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n\n    <!--begin::Action-->\n    <div class=\"pb-lg-0 pb-5\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_signin_submit\"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-3\"\n        [disabled]=\"loginForm.invalid\"\n      >\n        Sign In\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-light-primary font-weight-bolder px-8 py-4 my-3 font-size-lg\"\n        (click)=\"signInWithFB()\"\n      >\n        <span class=\"svg-icon svg-icon-md\">\n          <img height=\"20\" src=\"./assets/media/svg/social-icons/facebook.svg\" />\n        </span>\n        Sign in with Facebook\n      </button>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Action-->\n  </form>\n  <!--end::Form-->\n</div>\n<!--end::Signin-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { UserModel } from '../_models/user.model';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FacebookLoginProvider, SocialAuthService } from 'angularx-social-login';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  appName = environment.appName;\n\n  // KeenThemes mock, change it to:\n  // defaultAuth = {\n  //   email: '',\n  //   password: '',\n  // };\n  defaultAuth: any = {\n    email: '',\n    password: '',\n  };\n  loginForm: FormGroup;\n  hasError: boolean;\n  returnUrl: string;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private socialAuthService: SocialAuthService,\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']).then();\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    // get return url from route parameters or default to '/'\n    this.returnUrl =\n      this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: [\n        this.defaultAuth.email,\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n      password: [\n        this.defaultAuth.password,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.hasError = false;\n    const loginSub = this.authService\n      .login(this.f.email.value, this.f.password.value)\n      .pipe(first())\n      .subscribe((user: UserModel) => {\n        if (user) {\n          this.router.navigate([this.returnUrl]).then();\n        } else {\n          this.hasError = true;\n        }\n      });\n    this.unsubscribe.push(loginSub);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n\n  async signInWithFB(): Promise<void> {\n    const res = await this.socialAuthService.signIn(FacebookLoginProvider.PROVIDER_ID);\n    console.log(res);\n    if (res) {\n      const userRes = await this.authService.fbLogin(res).toPromise();\n      console.log('userRes:', userRes);\n      if (userRes) {\n        await this.router.navigate([this.returnUrl]);\n      } else {\n        this.hasError = true;\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss'],\n})\nexport class LogoutComponent implements OnInit {\n  constructor(private authService: AuthService) {\n    this.authService.logout();\n  }\n\n  ngOnInit(): void {}\n}\n","<p>logout works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  today: Date = new Date();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"d-flex flex-column flex-root h-100\" id=\"kt_login_wrapper\">\n  <!--begin::Login-->\n  <div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-column-fluid bg-white\" id=\"kt_login\">\n    <!--begin::Aside-->\n    <div class=\"login-aside d-flex flex-column flex-row-auto\" style=\"background-color: #F2C98A;\">\n      <!--begin::Aside Top-->\n      <div class=\"d-flex flex-column-auto flex-column pt-lg-40 pt-15\">\n        <!--begin::Aside header-->\n        <a href=\"#\" class=\"text-center mb-10\">\n          <img src=\"./assets/media/logos/logo-light.png\" class=\"max-h-70px\" alt=\"\"/>\n        </a>\n        <!--end::Aside header-->\n        \n        <!--begin::Aside title-->\n        <h3 class=\"font-weight-bolder text-center font-size-h4 font-size-h1-lg\" style=\"color: #986923;\">\n          Get FREE Like and make MONEY <br> with facebook like now\n        </h3>\n        <!--end::Aside title-->\n      </div>\n      <!--end::Aside Top-->\n      \n      <!--begin::Aside Bottom-->\n      <div class=\"aside-img d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center\"\n           style=\"background-image: url('./assets/media/svg/illustrations/login-visual-1.svg')\"></div>\n      <!--end::Aside Bottom-->\n    </div>\n    <!--begin::Aside-->\n    \n    <!--begin::Content-->\n    <div\n        class=\"login-content flex-row-fluid d-flex flex-column justify-content-center position-relative overflow-hidden p-7 mx-auto\">\n      <!--begin::Content body-->\n      <div class=\"d-flex flex-column-fluid flex-center\">\n        <router-outlet></router-outlet>\n      </div>\n      <!--end::Content body-->\n      \n      <!--begin::Content footer-->\n      <!--<div class=\"d-flex justify-content-lg-start justify-content-center align-items-end py-7 py-lg-0\">\n        <a href=\"#\" class=\"text-primary font-weight-bolder font-size-h5\">Terms</a>\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Plans</a>\n        <a href=\"#\" class=\"text-primary ml-10 font-weight-bolder font-size-h5\">Contact Us</a>\n      </div>-->\n      <!--end::Content footer-->\n    </div>\n    <!--end::Content-->\n  </div>\n  <!--end::Login-->\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from '../_services/auth.service';\nimport { first } from 'rxjs/operators';\n\nenum ErrorStates {\n  NotSubmitted,\n  HasError,\n  NoError,\n}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\n  errorStates = ErrorStates;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.forgotPasswordForm.controls;\n  }\n\n  initForm() {\n    this.forgotPasswordForm = this.fb.group({\n      email: [\n        'admin@demo.com',\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.errorState = ErrorStates.NotSubmitted;\n    const forgotPasswordSubscr = this.authService\n      .forgotPassword(this.f.email.value)\n      .pipe(first())\n      .subscribe((result: boolean) => {\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\n      });\n    this.unsubscribe.push(forgotPasswordSubscr);\n  }\n}\n","<div class=\"login-form login-forgot\">\n  <!--begin::Form-->\n  <form\n    class=\"form fv-plugins-bootstrap fv-plugins-framework\"\n    novalidate=\"novalidate\"\n    [formGroup]=\"forgotPasswordForm\"\n    (ngSubmit)=\"submit()\"\n    id=\"kt_login_forgot_form\"\n    [ngStyle]=\"{\n      display: errorState === errorStates.NoError ? 'none' : 'block'\n    }\"\n  >\n    <!--begin::Title-->\n    <div class=\"pb-13 pt-lg-0 pt-5\">\n      <h3 class=\"font-weight-bolder text-dark font-size-h4 font-size-h1-lg\">\n        Forgotten Password ?\n      </h3>\n      <p class=\"text-muted font-weight-bold font-size-h4\">\n        Enter your email to reset your password\n      </p>\n    </div>\n    <!--end::Title-->\n\n    <!-- begin::Alert error-->\n    <ng-container *ngIf=\"errorState === errorStates.HasError\">\n      <div\n        class=\"mb-10 alert alert-custom alert-light-danger alert-dismissible\"\n      >\n        <div class=\"alert-text\">The email detail is incorrect</div>\n      </div>\n    </ng-container>\n    <!-- end::Alert error-->\n\n    <!--begin::Form group-->\n    <div class=\"form-group fv-plugins-icon-container has-danger\">\n      <input\n        class=\"form-control form-control-solid h-auto py-7 px-6 rounded-lg font-size-h6\"\n        type=\"email\"\n        formControlName=\"email\"\n        placeholder=\"Email\"\n        name=\"email\"\n        autocomplete=\"off\"\n        [ngClass]=\"{\n          'is-invalid': forgotPasswordForm.controls['email'].invalid\n        }\"\n      />\n\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'required',\n          message: 'Email is required',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'email',\n          message: 'Email is invalid',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'minLength',\n          message: 'Email should have at least 3 symbols',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n      <ng-container\n        [ngTemplateOutlet]=\"formError\"\n        [ngTemplateOutletContext]=\"{\n          validation: 'maxLength',\n          message: 'Email should have maximum 360 symbols',\n          control: forgotPasswordForm.controls['email']\n        }\"\n      ></ng-container>\n    </div>\n    <!--end::Form group-->\n    <!--begin::Form group-->\n    <div class=\"form-group d-flex flex-wrap pb-lg-0\">\n      <button\n        type=\"submit\"\n        id=\"kt_login_forgot_submit\"\n        class=\"btn btn-primary font-weight-bolder font-size-h6 px-8 py-4 my-3 mr-4\"\n      >\n        Submit\n      </button>\n      <a\n        routerLink=\"/auth/login\"\n        id=\"kt_login_forgot_cancel\"\n        class=\"btn btn-light-primary font-weight-bolder font-size-h6 px-8 py-4 my-3\"\n      >\n        Cancel\n      </a>\n\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"spinner spinner-primary ml-5\"></span>\n      </ng-container>\n    </div>\n    <!--end::Form group-->\n    <div></div>\n  </form>\n  <!--end::Form-->\n\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\n    <div\n      class=\"card card-custom bgi-no-repeat gutter-b\"\n      style=\"\n        height: 175px;\n        background-color: #4ab58e;\n        background-position: calc(100% + 1rem) bottom;\n        background-size: 25% auto;\n        background-image: url(assets/media/svg/humans/custom-1.svg);\n      \"\n    >\n      <!--begin::Body-->\n      <div class=\"card-body d-flex align-items-center\">\n        <div class=\"py-2\">\n          <h3 class=\"text-white font-weight-bolder mb-3\">Email is correct!</h3>\n          <p class=\"text-white font-size-lg\">\n            Message with 'recovery' instruction<br />\n            has been sent<br />\n          </p>\n          <a\n            routerLink=\"/auth/login\"\n            class=\"swal2-confirm btn font-weight-bold btn-light-primary\"\n          >\n            Ok, got it!\n          </a>\n        </div>\n      </div>\n      <!--end::Body-->\n    </div>\n  </ng-container>\n</div>\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        {{ message }}\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { Injectable, Inject, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ReplaySubject, AsyncSubject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { __awaiter } from 'tslib';\n\nimport * as ɵngcc0 from '@angular/core';\nclass BaseLoginProvider {\r\n    constructor() { }\r\n    loadScript(id, src, onload, parentElement = null) {\r\n        // get document if platform is only browser\r\n        if (typeof document !== 'undefined' && !document.getElementById(id)) {\r\n            let signInJS = document.createElement('script');\r\n            signInJS.async = true;\r\n            signInJS.src = src;\r\n            signInJS.onload = onload;\r\n            if (!parentElement) {\r\n                parentElement = document.head;\r\n            }\r\n            parentElement.appendChild(signInJS);\r\n        }\r\n    }\r\n}\n\nclass SocialUser {\r\n}\n\nclass GoogleLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = { scope: 'email' }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(GoogleLoginProvider.PROVIDER_ID, 'https://apis.google.com/js/platform.js', () => {\r\n                    gapi.load('auth2', () => {\r\n                        this.auth2 = gapi.auth2.init(Object.assign(Object.assign({}, this.initOptions), { client_id: this.clientId }));\r\n                        this.auth2\r\n                            .then(() => {\r\n                            resolve();\r\n                        })\r\n                            .catch((err) => {\r\n                            reject(err);\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus(loginStatusOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), loginStatusOptions);\r\n        return new Promise((resolve, reject) => {\r\n            if (this.auth2.isSignedIn.get()) {\r\n                let user = new SocialUser();\r\n                const profile = this.auth2.currentUser.get().getBasicProfile();\r\n                const authResponse = this.auth2.currentUser.get().getAuthResponse(true); // get complete authResponse object\r\n                user.id = profile.getId();\r\n                user.name = profile.getName();\r\n                user.email = profile.getEmail();\r\n                user.photoUrl = profile.getImageUrl();\r\n                user.firstName = profile.getGivenName();\r\n                user.lastName = profile.getFamilyName();\r\n                user.response = authResponse;\r\n                const resolveUser = authResponse => {\r\n                    user.authToken = authResponse.access_token;\r\n                    user.idToken = authResponse.id_token;\r\n                    resolve(user);\r\n                };\r\n                if (options.refreshToken) {\r\n                    this.auth2.currentUser.get().reloadAuthResponse().then(resolveUser);\r\n                }\r\n                else {\r\n                    const authResponse = this.auth2.currentUser.get().getAuthResponse(true);\r\n                    resolveUser(authResponse);\r\n                }\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${GoogleLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            const offlineAccess = options && options.offline_access;\r\n            let promise = !offlineAccess\r\n                ? this.auth2.signIn(signInOptions)\r\n                : this.auth2.grantOfflineAccess(signInOptions);\r\n            promise\r\n                .then((response) => {\r\n                let user = new SocialUser();\r\n                if (response && response.code) {\r\n                    user.authorizationCode = response.code;\r\n                }\r\n                else {\r\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\r\n                    let authResponse = this.auth2.currentUser.get().getAuthResponse(true);\r\n                    let token = authResponse.access_token;\r\n                    let backendToken = authResponse.id_token;\r\n                    user.id = profile.getId();\r\n                    user.name = profile.getName();\r\n                    user.email = profile.getEmail();\r\n                    user.photoUrl = profile.getImageUrl();\r\n                    user.firstName = profile.getGivenName();\r\n                    user.lastName = profile.getFamilyName();\r\n                    user.authToken = token;\r\n                    user.idToken = backendToken;\r\n                    user.response = authResponse;\r\n                }\r\n                resolve(user);\r\n            }, (closed) => {\r\n                reject(closed);\r\n            })\r\n                .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            let signOutPromise;\r\n            if (revoke) {\r\n                signOutPromise = this.auth2.disconnect();\r\n            }\r\n            else {\r\n                signOutPromise = this.auth2.signOut();\r\n            }\r\n            signOutPromise\r\n                .then((err) => {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            })\r\n                .catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n}\r\nGoogleLoginProvider.PROVIDER_ID = 'GOOGLE';\n\n/** @dynamic */\r\nclass SocialAuthService {\r\n    constructor(config) {\r\n        this.providers = new Map();\r\n        this.autoLogin = false;\r\n        this._user = null;\r\n        this._authState = new ReplaySubject(1);\r\n        /* Consider making this an enum comprising LOADING, LOADED, FAILED etc. */\r\n        this.initialized = false;\r\n        this._initState = new AsyncSubject();\r\n        if (config instanceof Promise) {\r\n            config.then((config) => {\r\n                this.initialize(config);\r\n            });\r\n        }\r\n        else {\r\n            this.initialize(config);\r\n        }\r\n    }\r\n    get authState() {\r\n        return this._authState.asObservable();\r\n    }\r\n    get initState() {\r\n        return this._initState.asObservable();\r\n    }\r\n    initialize(config) {\r\n        this.autoLogin = config.autoLogin !== undefined ? config.autoLogin : false;\r\n        const { onError = console.error } = config;\r\n        config.providers.forEach((item) => {\r\n            this.providers.set(item.id, item.provider);\r\n        });\r\n        Promise.all(Array.from(this.providers.values()).map((provider) => provider.initialize()))\r\n            .then(() => {\r\n            if (this.autoLogin) {\r\n                const loginStatusPromises = [];\r\n                let loggedIn = false;\r\n                this.providers.forEach((provider, key) => {\r\n                    let promise = provider.getLoginStatus();\r\n                    loginStatusPromises.push(promise);\r\n                    promise\r\n                        .then((user) => {\r\n                        user.provider = key;\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                        loggedIn = true;\r\n                    })\r\n                        .catch(console.debug);\r\n                });\r\n                Promise.all(loginStatusPromises).catch(() => {\r\n                    if (!loggedIn) {\r\n                        this._user = null;\r\n                        this._authState.next(null);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n            .catch((error) => {\r\n            onError(error);\r\n        })\r\n            .finally(() => {\r\n            this.initialized = true;\r\n            this._initState.next(this.initialized);\r\n            this._initState.complete();\r\n        });\r\n    }\r\n    refreshAuthToken(providerId) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (providerId !== GoogleLoginProvider.PROVIDER_ID) {\r\n                reject(SocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN);\r\n            }\r\n            else {\r\n                const providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .getLoginStatus({ refreshToken: true })\r\n                        .then((user) => {\r\n                        user.provider = providerId;\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                        resolve();\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    signIn(providerId, signInOptions) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else {\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signIn(signInOptions)\r\n                        .then((user) => {\r\n                        user.provider = providerId;\r\n                        resolve(user);\r\n                        this._user = user;\r\n                        this._authState.next(user);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    signOut(revoke = false) {\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.initialized) {\r\n                reject(SocialAuthService.ERR_NOT_INITIALIZED);\r\n            }\r\n            else if (!this._user) {\r\n                reject(SocialAuthService.ERR_NOT_LOGGED_IN);\r\n            }\r\n            else {\r\n                let providerId = this._user.provider;\r\n                let providerObject = this.providers.get(providerId);\r\n                if (providerObject) {\r\n                    providerObject\r\n                        .signOut(revoke)\r\n                        .then(() => {\r\n                        resolve();\r\n                        this._user = null;\r\n                        this._authState.next(null);\r\n                    })\r\n                        .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(SocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\nSocialAuthService.ɵfac = function SocialAuthService_Factory(t) { return new (t || SocialAuthService)(ɵngcc0.ɵɵinject('SocialAuthServiceConfig')); };\nSocialAuthService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SocialAuthService, factory: SocialAuthService.ɵfac });\r\nSocialAuthService.ERR_LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';\r\nSocialAuthService.ERR_NOT_LOGGED_IN = 'Not logged in';\r\nSocialAuthService.ERR_NOT_INITIALIZED = 'Login providers not ready yet. Are there errors on your console?';\r\nSocialAuthService.ERR_NOT_SUPPORTED_FOR_REFRESH_TOKEN = 'Chosen login provider is not supported for refreshing a token';\r\nSocialAuthService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: ['SocialAuthServiceConfig',] }] }\r\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialAuthService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: ['SocialAuthServiceConfig']\n            }] }]; }, null); })();\n\nclass SocialLoginModule {\r\n    constructor(parentModule) {\r\n        if (parentModule) {\r\n            throw new Error('SocialLoginModule is already loaded. Import it in the AppModule only');\r\n        }\r\n    }\r\n    static initialize(config) {\r\n        return {\r\n            ngModule: SocialLoginModule,\r\n            providers: [\r\n                SocialAuthService,\r\n                {\r\n                    provide: 'SocialAuthServiceConfig',\r\n                    useValue: config\r\n                }\r\n            ]\r\n        };\r\n    }\r\n}\nSocialLoginModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SocialLoginModule });\nSocialLoginModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SocialLoginModule_Factory(t) { return new (t || SocialLoginModule)(ɵngcc0.ɵɵinject(SocialLoginModule, 12)); }, providers: [\n        SocialAuthService\n    ], imports: [[\n            CommonModule\n        ]] });\r\nSocialLoginModule.ctorParameters = () => [\r\n    { type: SocialLoginModule, decorators: [{ type: Optional }, { type: SkipSelf }] }\r\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SocialLoginModule, { imports: function () { return [CommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SocialLoginModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule\n                ],\n                providers: [\n                    SocialAuthService\n                ]\n            }]\n    }], function () { return [{ type: SocialLoginModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, null); })();\n\n// Simulates login / logout without actually requiring an Internet connection.\r\n//\r\n// Useful for certain development situations.\r\n//\r\n// For example, if you want to simulate the greatest football referee England has ever produced:\r\n//\r\n//  const dummyUser: SocialUser = {\r\n//     id: '0123456789',\r\n//     name: 'Howard Webb',\r\n//     email: 'howard@webb.com',\r\n//     firstName: 'Howard',\r\n//     lastName: 'Webb',\r\n//     authToken: 'dummyAuthToken',\r\n//     photoUrl: 'https://en.wikipedia.org/wiki/Howard_Webb#/media/File:Howard_Webb_march11.jpg',\r\n//     provider: 'DUMMY',\r\n//     idToken: 'dummyIdToken',\r\n//     authorizationCode: 'dummyAuthCode'\r\n// };\r\n//\r\n//  let config = new AuthServiceConfig([\r\n//  { ... },\r\n//  {\r\n//       id: DummyLoginProvider.PROVIDER_ID,\r\n//       provider: new DummyLoginProvider(dummyUser)  // Pass your user into the constructor\r\n//   },\r\n//  { ... }\r\n//  ]);\r\nclass DummyLoginProvider extends BaseLoginProvider {\r\n    constructor(dummy) {\r\n        super();\r\n        if (dummy) {\r\n            this.dummy = dummy;\r\n        }\r\n        else {\r\n            this.dummy = DummyLoginProvider.DEFAULT_USER;\r\n        }\r\n        // Start not logged in\r\n        this.loggedIn = false;\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.loggedIn) {\r\n                resolve(this.dummy);\r\n            }\r\n            else {\r\n                reject('No user is currently logged in.');\r\n            }\r\n        });\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            resolve();\r\n        });\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = true;\r\n            resolve(this.dummy);\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            this.loggedIn = false;\r\n            resolve();\r\n        });\r\n    }\r\n}\r\nDummyLoginProvider.PROVIDER_ID = 'DUMMY';\r\nDummyLoginProvider.DEFAULT_USER = {\r\n    id: '1234567890',\r\n    name: 'Mickey Mouse',\r\n    email: 'mickey@mouse.com',\r\n    firstName: 'Mickey',\r\n    lastName: 'Mouse',\r\n    authToken: 'dummyAuthToken',\r\n    photoUrl: 'https://en.wikipedia.org/wiki/File:Mickey_Mouse.png',\r\n    provider: 'DUMMY',\r\n    idToken: 'dummyIdToken',\r\n    authorizationCode: 'dummyAuthCode',\r\n    response: {}\r\n};\n\nclass FacebookLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        scope: 'email,public_profile',\r\n        locale: 'en_US',\r\n        fields: 'name,email,picture,first_name,last_name',\r\n        version: 'v4.0',\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(FacebookLoginProvider.PROVIDER_ID, `//connect.facebook.net/${this.initOptions.locale}/sdk.js`, () => {\r\n                    FB.init({\r\n                        appId: this.clientId,\r\n                        autoLogAppEvents: true,\r\n                        cookie: true,\r\n                        xfbml: true,\r\n                        version: this.initOptions.version,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.getLoginStatus((response) => {\r\n                if (response.status === 'connected') {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${this.initOptions.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal';\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(`No user is currently logged in with ${FacebookLoginProvider.PROVIDER_ID}`);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            FB.login((response) => {\r\n                if (response.authResponse) {\r\n                    let authResponse = response.authResponse;\r\n                    FB.api(`/me?fields=${options.fields}`, (fbUser) => {\r\n                        let user = new SocialUser();\r\n                        user.id = fbUser.id;\r\n                        user.name = fbUser.name;\r\n                        user.email = fbUser.email;\r\n                        user.photoUrl =\r\n                            'https://graph.facebook.com/' +\r\n                                fbUser.id +\r\n                                '/picture?type=normal';\r\n                        user.firstName = fbUser.first_name;\r\n                        user.lastName = fbUser.last_name;\r\n                        user.authToken = authResponse.accessToken;\r\n                        user.response = fbUser;\r\n                        resolve(user);\r\n                    });\r\n                }\r\n                else {\r\n                    reject('User cancelled login or did not fully authorize.');\r\n                }\r\n            }, options);\r\n        });\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            FB.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n}\r\nFacebookLoginProvider.PROVIDER_ID = 'FACEBOOK';\n\nclass AmazonLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        scope: 'profile',\r\n        scope_data: {\r\n            profile: { essential: false },\r\n        },\r\n        redirect_uri: location.origin,\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n    }\r\n    initialize() {\r\n        let amazonRoot = null;\r\n        if (document) {\r\n            amazonRoot = document.createElement('div');\r\n            amazonRoot.id = 'amazon-root';\r\n            document.body.appendChild(amazonRoot);\r\n        }\r\n        window.onAmazonLoginReady = () => {\r\n            amazon.Login.setClientId(this.clientId);\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript('amazon-login-sdk', 'https://assets.loginwithamazon.com/sdk/na/login1.js', () => {\r\n                    resolve();\r\n                }, amazonRoot);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => {\r\n            let token = this.retrieveToken();\r\n            if (token) {\r\n                amazon.Login.retrieveProfile(token, (response) => {\r\n                    if (response.success) {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.response = response.profile;\r\n                        resolve(user);\r\n                    }\r\n                    else {\r\n                        reject(response.error);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                reject(`No user is currently logged in with ${AmazonLoginProvider.PROVIDER_ID}`);\r\n            }\r\n        });\r\n    }\r\n    signIn(signInOptions) {\r\n        const options = Object.assign(Object.assign({}, this.initOptions), signInOptions);\r\n        return new Promise((resolve, reject) => {\r\n            amazon.Login.authorize(options, (authResponse) => {\r\n                if (authResponse.error) {\r\n                    reject(authResponse.error);\r\n                }\r\n                else {\r\n                    amazon.Login.retrieveProfile(authResponse.access_token, (response) => {\r\n                        let user = new SocialUser();\r\n                        user.id = response.profile.CustomerId;\r\n                        user.name = response.profile.Name;\r\n                        user.email = response.profile.PrimaryEmail;\r\n                        user.authToken = authResponse.access_token;\r\n                        user.response = response.profile;\r\n                        this.persistToken(authResponse.access_token);\r\n                        resolve(user);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                amazon.Login.logout();\r\n                this.clearToken();\r\n                resolve();\r\n            }\r\n            catch (err) {\r\n                reject(err.message);\r\n            }\r\n        });\r\n    }\r\n    persistToken(token) {\r\n        localStorage.setItem(`${AmazonLoginProvider.PROVIDER_ID}_token`, token);\r\n    }\r\n    retrieveToken() {\r\n        return localStorage.getItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n    clearToken() {\r\n        localStorage.removeItem(`${AmazonLoginProvider.PROVIDER_ID}_token`);\r\n    }\r\n}\r\nAmazonLoginProvider.PROVIDER_ID = 'AMAZON';\n\nclass VKLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions = {\r\n        fields: 'photo_max,contacts',\r\n        version: '5.124',\r\n    }) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = initOptions;\r\n        this.VK_API_URL = '//vk.com/js/api/openapi.js';\r\n        this.VK_API_GET_USER = 'users.get';\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                this.loadScript(VKLoginProvider.PROVIDER_ID, this.VK_API_URL, () => {\r\n                    VK.init({\r\n                        apiId: this.clientId,\r\n                    });\r\n                    resolve();\r\n                });\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return new Promise((resolve, reject) => this.getLoginStatusInternal(resolve, reject));\r\n    }\r\n    signIn() {\r\n        return new Promise((resolve, reject) => this.signInInternal(resolve, reject));\r\n    }\r\n    signOut() {\r\n        return new Promise((resolve, reject) => {\r\n            VK.Auth.logout((response) => {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    signInInternal(resolve, reject) {\r\n        VK.Auth.login((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    getUser(userId, token, resolve) {\r\n        VK.Api.call(this.VK_API_GET_USER, {\r\n            user_id: userId,\r\n            fields: this.initOptions.fields,\r\n            v: this.initOptions.version,\r\n        }, (userResponse) => {\r\n            resolve(this.createUser(Object.assign({}, { token }, userResponse.response[0])));\r\n        });\r\n    }\r\n    getLoginStatusInternal(resolve, reject) {\r\n        VK.Auth.getLoginStatus((loginResponse) => {\r\n            if (loginResponse.status === 'connected') {\r\n                this.getUser(loginResponse.session.mid, loginResponse.session.sid, resolve);\r\n            }\r\n        });\r\n    }\r\n    createUser(response) {\r\n        const user = new SocialUser();\r\n        user.id = response.id;\r\n        user.name = `${response.first_name} ${response.last_name}`;\r\n        user.photoUrl = response.photo_max;\r\n        user.authToken = response.token;\r\n        return user;\r\n    }\r\n}\r\nVKLoginProvider.PROVIDER_ID = 'VK';\n\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nvar ProtocolMode;\r\n(function (ProtocolMode) {\r\n    ProtocolMode[\"AAD\"] = \"AAD\";\r\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\r\n})(ProtocolMode || (ProtocolMode = {}));\r\nconst COMMON_AUTHORITY = 'https://login.microsoftonline.com/common/';\r\n/**\r\n * Microsoft Authentication using MSAL v2: https://github.com/AzureAD/microsoft-authentication-library-for-js/tree/dev/lib/msal-browser\r\n */\r\nclass MicrosoftLoginProvider extends BaseLoginProvider {\r\n    constructor(clientId, initOptions) {\r\n        super();\r\n        this.clientId = clientId;\r\n        this.initOptions = {\r\n            authority: COMMON_AUTHORITY,\r\n            scopes: ['openid', 'email', 'profile', 'User.Read'],\r\n            knownAuthorities: [],\r\n            protocolMode: ProtocolMode.AAD,\r\n            clientCapabilities: [],\r\n            cacheLocation: 'sessionStorage'\r\n        };\r\n        this.initOptions = Object.assign(Object.assign({}, this.initOptions), initOptions);\r\n    }\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            this.loadScript(MicrosoftLoginProvider.PROVIDER_ID, 'https://alcdn.msauth.net/browser/2.1.0/js/msal-browser.js', () => {\r\n                var _a;\r\n                try {\r\n                    const config = {\r\n                        auth: {\r\n                            clientId: this.clientId,\r\n                            redirectUri: (_a = this.initOptions.redirect_uri) !== null && _a !== void 0 ? _a : location.origin,\r\n                            authority: this.initOptions.authority,\r\n                            knownAuthorities: this.initOptions.knownAuthorities,\r\n                            protocolMode: this.initOptions.protocolMode,\r\n                            clientCapabilities: this.initOptions.clientCapabilities\r\n                        },\r\n                        cache: !this.initOptions.cacheLocation ? null : {\r\n                            cacheLocation: this.initOptions.cacheLocation\r\n                        }\r\n                    };\r\n                    this._instance = new msal.PublicClientApplication(config);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    getSocialUser(loginResponse) {\r\n        return new Promise((resolve, reject) => {\r\n            //After login, use Microsoft Graph API to get user info\r\n            let meRequest = new XMLHttpRequest();\r\n            meRequest.onreadystatechange = () => {\r\n                if (meRequest.readyState == 4) {\r\n                    try {\r\n                        if (meRequest.status == 200) {\r\n                            let userInfo = JSON.parse(meRequest.responseText);\r\n                            let user = new SocialUser();\r\n                            user.provider = MicrosoftLoginProvider.PROVIDER_ID;\r\n                            user.id = loginResponse.idToken;\r\n                            user.authToken = loginResponse.accessToken;\r\n                            user.name = loginResponse.idTokenClaims.name;\r\n                            user.email = loginResponse.account.username;\r\n                            user.idToken = loginResponse.idToken;\r\n                            user.response = loginResponse;\r\n                            user.firstName = userInfo.givenName;\r\n                            user.lastName = userInfo.surname;\r\n                            resolve(user);\r\n                        }\r\n                        else {\r\n                            reject(`Error retrieving user info: ${meRequest.status}`);\r\n                        }\r\n                    }\r\n                    catch (err) {\r\n                        reject(err);\r\n                    }\r\n                }\r\n            };\r\n            //Microsoft Graph ME Endpoint: https://docs.microsoft.com/en-us/graph/api/user-get?view=graph-rest-1.0&tabs=http\r\n            meRequest.open('GET', 'https://graph.microsoft.com/v1.0/me');\r\n            meRequest.setRequestHeader('Authorization', `Bearer ${loginResponse.accessToken}`);\r\n            try {\r\n                meRequest.send();\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    getLoginStatus() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const accounts = this._instance.getAllAccounts();\r\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\r\n                const loginResponse = yield this._instance.ssoSilent({\r\n                    scopes: this.initOptions.scopes,\r\n                    loginHint: accounts[0].username\r\n                });\r\n                return yield this.getSocialUser(loginResponse);\r\n            }\r\n            else {\r\n                throw `No user is currently logged in with ${MicrosoftLoginProvider.PROVIDER_ID}`;\r\n            }\r\n        });\r\n    }\r\n    signIn() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const loginResponse = yield this._instance.loginPopup({\r\n                scopes: this.initOptions.scopes\r\n            });\r\n            return yield this.getSocialUser(loginResponse);\r\n        });\r\n    }\r\n    signOut(revoke) {\r\n        var _a, _b;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const accounts = this._instance.getAllAccounts();\r\n            if ((accounts === null || accounts === void 0 ? void 0 : accounts.length) > 0) {\r\n                //TODO: This redirects to a Microsoft page, then sends us back to redirect_uri... this doesn't seem to match other providers\r\n                //Open issues:\r\n                // https://github.com/abacritt/angularx-social-login/issues/306\r\n                // https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/2563\r\n                yield this._instance.logout({\r\n                    account: accounts[0],\r\n                    postLogoutRedirectUri: (_b = (_a = this.initOptions.logout_redirect_uri) !== null && _a !== void 0 ? _a : this.initOptions.redirect_uri) !== null && _b !== void 0 ? _b : location.href\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nMicrosoftLoginProvider.PROVIDER_ID = 'MICROSOFT';\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AmazonLoginProvider, BaseLoginProvider, DummyLoginProvider, FacebookLoginProvider, GoogleLoginProvider, MicrosoftLoginProvider, SocialAuthService, SocialLoginModule, SocialUser, VKLoginProvider };\n\n//# sourceMappingURL=angularx-social-login.js.map","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AuthComponent} from './auth.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegistrationComponent} from './registration/registration.component';\nimport {ForgotPasswordComponent} from './forgot-password/forgot-password.component';\nimport {LogoutComponent} from './logout/logout.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'login',\n        pathMatch: 'full'\n      },\n      {\n        path: 'login',\n        component: LoginComponent,\n        data: {returnUrl: window.location.pathname}\n      },\n      {\n        path: 'registration',\n        component: RegistrationComponent\n      },\n      {\n        path: 'forgot-password',\n        component: ForgotPasswordComponent\n      },\n      {\n        path: 'logout',\n        component: LogoutComponent\n      },\n      {path: '', redirectTo: 'login', pathMatch: 'full'},\n      {path: '**', redirectTo: 'login', pathMatch: 'full'},\n    ]\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AuthRoutingModule {}\n"]}