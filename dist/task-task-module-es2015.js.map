{"version":3,"sources":["./src/app/pages/task/task.service.ts","./src/app/pages/task/task.module.ts","./src/app/pages/task/task-routing.module.ts","./src/app/pages/task/task.component.ts","./src/app/pages/task/task.component.html"],"names":[],"mappings":"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","file":"task-task-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ApiService } from '@core/services/api.service';\nimport { tap } from 'rxjs/operators';\nimport { PaginatorState } from '../../_metronic/shared/crud-table';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  private dataSource = new BehaviorSubject<any>(null);\n  public data$ = this.dataSource.asObservable();\n\n  private paginationSource = new BehaviorSubject<PaginatorState>(null);\n  public pagination$ = this.paginationSource.asObservable();\n\n  constructor(private api: ApiService) {\n  }\n\n  fetch(type: any, page: number = 1, pageSize: number = 50) {\n    let url;\n    switch (type) {\n      case 'share_link':\n        url = `/articles?page=${page}&per_page=${pageSize}`;\n        break;\n      case 'join_group':\n        url = `/fbgroups?page=${page}`;\n        break;\n      case 'like_page':\n        url = `/fbpages?page=${page}`;\n        break;\n      case 'interaction_post':\n        url = `/fbposts?page=${page}`;\n        break;\n    }\n    return this.api.get(url).pipe(\n      tap((res: any) => {\n        this.dataSource.next(res.data);\n        const paginator = {\n          ...res.meta.pagination,\n          page: res.meta.pagination.current_page,\n          pageSize: res.meta.pagination.per_page,\n        };\n        this.paginationSource.next(paginator);\n      })\n    );\n  }\n\n  shareArticle(page: number) {\n    return this.api.get(`/articles?page=${page}`).pipe(\n      tap((res: any) => {\n        this.dataSource.next(res.data);\n        this.paginationSource.next(res.meta.pagination);\n      })\n    );\n  }\n\n  joinGroup(page: number) {\n    return this.api.get(`/fbgroups?page=${page}`).pipe(\n      tap((res: any) => {\n        this.dataSource.next(res.data);\n        this.paginationSource.next(res.meta.pagination);\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TaskRoutingModule } from './task-routing.module';\nimport { TaskComponent } from './task.component';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { ShareModule } from 'ngx-sharebuttons';\nimport { SharedAppModule } from '@shared/shared.module';\nimport { TranslationModule } from '../../modules/i18n/translation.module';\n\n@NgModule({\n  declarations: [TaskComponent],\n  imports: [\n    CommonModule,\n    TaskRoutingModule,\n    CRUDTableModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    ShareModule,\n    SharedAppModule,\n    TranslationModule\n  ]\n})\nexport class TaskModule {\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TaskComponent } from './task.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TaskComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TaskRoutingModule {\n}\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { ApiService } from '@core/services/api.service';\nimport { Observable } from 'rxjs';\nimport { TaskService } from '@pages/task/task.service';\nimport { AuthService, UserModel } from '../../modules/auth';\nimport { PaginatorState } from '../../_metronic/shared/crud-table';\nimport { Constants } from '@core/configs/constants';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss']\n})\nexport class TaskComponent implements OnInit, AfterViewInit {\n  type: 'share_link' | 'share_post' | 'join_group' | 'share_page' | 'like_post' | 'like_page' | 'welcome' | 'invite' = 'share_link';\n  currentPage = 1;\n  pageSize = Constants.table.rows;\n  typeData = [\n    {\n      name: 'share_link'\n    },\n    {\n      name: 'join_group'\n    },\n    {\n      name: 'like_page'\n    },\n    {\n      name: 'interaction_post'\n    }\n  ];\n  data: any;\n  data$: Observable<any[]>;\n  user$: Observable<UserModel>;\n\n  // layout\n  isLoading: boolean;\n  paginator: PaginatorState;\n  pagination$: Observable<PaginatorState>;\n\n  constructor(private apiService: ApiService,\n              private taskService: TaskService,\n              private auth: AuthService) {\n    this.data$ = this.taskService.data$;\n    this.pagination$ = this.taskService.pagination$;\n    this.user$ = this.auth.currentUserSubject.asObservable();\n  }\n\n  ngOnInit(): void {\n    this.taskService.fetch(this.type, this.currentPage, this.pageSize).subscribe();\n  }\n\n  ngAfterViewInit() {\n\n  }\n\n\n  async onSelectType(type: any) {\n    if (this.type !== type) {\n      this.type = type;\n      this.currentPage = 1;\n      await this.getData();\n    }\n  }\n\n  async getData() {\n    try {\n      await this.taskService.fetch(this.type, this.currentPage, this.pageSize).toPromise();\n    } catch (e) {\n\n    }\n  }\n\n  async saveAction(task: any) {\n    try {\n      const body = {\n        item_type: task.type,\n        item_id: task.hash_id,\n        type: task.action_type,\n      };\n      const res = await this.apiService.post('/histories', body).toPromise();\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  // pagination\n  async paginate(paginator: PaginatorState) {\n    console.log(paginator);\n    this.currentPage = paginator.page;\n    this.pageSize = paginator.pageSize;\n    await this.getData();\n  }\n}\n","<div class=\"d-flex flex-row\">\n  <div class=\"flex-row-auto offcanvas-mobile w-200px w-xxl-275px\">\n    <div class=\"card card-custom card-stretch\">\n      <div class=\"card-body px-5\">\n        <div class=\"navi-section mb-2 font-size-h6 font-weight-bold pb-0 d-flex\">\n          <span>{{ 'TITLE.filter' | translate }}</span>\n          <i class=\"flaticon2-console ml-auto\"></i>\n        </div>\n        <div class=\"navi navi-hover navi-active navi-link-rounded navi-bold navi-icon-center navi-light-icon\">\n          <!--begin:Item-->\n          <div *ngFor=\"let item of typeData\" class=\"navi-item my-2\">\n            <a (click)=\"onSelectType(item.name)\" [ngClass]=\"{'active': item.name === type}\" href=\"#\" class=\"navi-link\">\n              <span class=\"navi-text font-weight-bolder font-size-lg\">\n                {{ 'RESPONSE.' + item.name | translate }}\n              </span>\n            </a>\n          </div>\n          <!--end:Item-->\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"flex-row-fluid ml-lg-8\" *ngIf=\"user$ | async as user\">\n    <div class=\"card card-custom gutter-b mb-0\">\n      <div class=\"card-header\">\n        <div class=\"card-title\">\n          <h3 class=\"card-label\">{{ 'TITLE.tasks_list' | translate }}</h3>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <!-- begin:Table -->\n        <div class=\"table-responsive angular-bootstrap-table\">\n          <table\n                  class=\"table table-head-custom table-vertical-center overflow-hidden\"\n          >\n            <thead>\n            <th>\n              {{ 'TABLE.title' | translate }}\n            </th>\n            <th class=\"text-center\" [style.width.px]=\"100\">\n              {{ 'TABLE.receive' | translate }}\n            </th>\n            <th class=\"text-center\" [style.width.px]=\"100\">\n              {{ 'TABLE.remaining' | translate }}\n            </th>\n            <th class=\"text-center\" [style.width.px]=\"100\">\n              {{ 'TABLE.status' | translate }}\n            </th>\n            <th [style.width.px]=\"100\">\n              {{ 'TABLE.date' | translate }}\n            </th>\n            <th [style.width.px]=\"160\">\n              {{ 'TABLE.actions' | translate }}\n            </th>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let task of this.data$ | async\">\n              <td>\n                <a href=\"{{ task.link }}\" target=\"_blank\">\n                  {{ task.name }}\n                </a>\n              </td>\n              <td class=\"text-center\">{{ task.receive || 0 }}</td>\n              <td class=\"text-center\">{{ task.remain }}/{{ task.budget || 0 }}</td>\n              <td class=\"text-center\">\n                        <span\n                                class=\"label label-lg label-inline\"\n                                [class.label-light-primary]=\"task.status === 0\"\n                                [class.label-light-success]=\"task.status === 1\"\n                                [class.label-mute]=\"task.status === 2\"\n                        >\n                        <ng-container *ngIf=\"task.status == 0\">{{ 'STATUS.open' | translate }}</ng-container>\n                        <ng-container *ngIf=\"task.status == 1\">{{ 'STATUS.shared' | translate }}</ng-container>\n                        <ng-container *ngIf=\"task.status == 2\">{{ 'STATUS.closed' | translate }}</ng-container>\n                      </span>\n              </td>\n              <td>{{ task.created_at | date: 'dd/MM/yyyy' }}</td>\n              <td>\n                <a *ngIf=\"task.action_type === 'share_post';else templateButtonAction\"\n                   shareButton=\"facebook\" [url]=\"task.link + '?utm_source=FanLike&utm_medium=' + user.hash_id\"\n                   class=\"btn btn-primary\"\n                   (click)=\"saveAction(task)\">{{ 'RESPONSE.' + task.action_type | translate }}</a>\n                <ng-template #templateButtonAction>\n                  <a [href]=\"task.link + '?utm_source=FanLike&utm_medium=' + user.hash_id\"\n                     target=\"_blank\"\n                     class=\"btn btn-primary\" (click)=\"saveAction(task)\">\n                    {{ 'RESPONSE.' + task.action_type | translate }}\n                  </a>\n                </ng-template>\n              </td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n        <!-- end: Table -->\n        <app-paginator *ngIf=\"pagination$ | async as pagination\"\n                       class=\"d-flex justify-content-between align-items-center flex-wrap\"\n                       [paginator]=\"pagination\"\n                       [isLoading]=\"isLoading\" (paginate)=\"paginate($event)\"></app-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n\n"],"sourceRoot":"webpack:///"}