{"version":3,"sources":["webpack:///src/app/modules/user-profile/user-profile-routing.module.ts","webpack:///src/app/modules/user-profile/_components/profile-card/profile-card.component.ts","webpack:///src/app/modules/user-profile/_components/profile-card/profile-card.component.html","webpack:///src/app/modules/user-profile/change-password/change-password.component.html","webpack:///src/app/modules/user-profile/change-password/change-password.component.ts","webpack:///src/app/modules/user-profile/payments-information/payments-information.component.html","webpack:///src/app/modules/user-profile/payments-information/payments-information.component.ts","webpack:///src/app/modules/user-profile/account-information/account-information.component.ts","webpack:///src/app/modules/user-profile/account-information/account-information.component.html","webpack:///src/app/modules/user-profile/tax-information/tax-information.component.ts","webpack:///src/app/modules/user-profile/tax-information/tax-information.component.html","webpack:///src/app/modules/user-profile/statements/statements.component.ts","webpack:///src/app/modules/user-profile/statements/statements.component.html","webpack:///src/app/modules/user-profile/profile-overview/profile-overview.component.ts","webpack:///src/app/modules/user-profile/profile-overview/profile-overview.component.html","webpack:///src/app/modules/user-profile/saved-credit-cards/saved-credit-cards.component.ts","webpack:///src/app/modules/user-profile/saved-credit-cards/saved-credit-cards.component.html","webpack:///src/app/modules/user-profile/email-settings/email-settings.component.ts","webpack:///src/app/modules/user-profile/email-settings/email-settings.component.html","webpack:///src/app/modules/user-profile/user-profile.component.ts","webpack:///src/app/modules/user-profile/user-profile.component.html","webpack:///src/app/modules/user-profile/user-profile.module.ts","webpack:///src/app/modules/user-profile/personal-information/personal-information.component.html","webpack:///src/app/modules/user-profile/personal-information/personal-information.component.ts"],"names":["routes","path","component","children","redirectTo","pathMatch","UserProfileRoutingModule","forChild","imports","exports","ProfileCardComponent","userService","user$","currentUserSubject","asObservable","selector","templateUrl","styleUrls","ChangePasswordComponent","fb","subscriptions","isLoading$","isLoadingSubject","sb","pipe","user","subscribe","Object","assign","firstUserState","loadForm","push","forEach","unsubscribe","formGroup","group","currentPassword","password","required","cPassword","validator","MatchPassword","markAllAsTouched","valid","value","next","setTimeout","e","console","log","controlName","control","controls","dirty","touched","invalid","validation","hasError","ProfilePaymentsInformationComponent","authService","snackBar","validationMessages","name","minlength","maxlength","minimum_payment","number","phone","phoneFormat","constants","form","type","compose","formPayPal","paypal_account_name","paypal_email","email","paypal_minimum_payment","formBank","bank_account_name","bank_name","bank_address","bank_account_number","bank_iban","bank_routing_number","bank_swift_code","bank_phone_number","bank_minimum_payment","formPayoneer","payoneer_account_name","payoneer_email","payoneer_minimum_payment","getData","paymentGet","toPromise","resPayment","data","patchValue","submitted","body","minimumPayment","paymentUpdate","default_payment_method","result","open","duration","error","meta","messages","panelClass","AccountInformationComponent","username","language","timeZone","communicationEmail","communication","communicationSMS","sms","communicationPhone","formValues","TaxInformationComponent","StatementsComponent","ProfileOverviewComponent","auth","env","SavedCreditCardsComponent","EmailSettingsComponent","emailNotification","emailSettings","sendCopyToPersonalEmail","youHaveNewNotifications","activityRelatesEmail","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","newsAboutKeenthemesProductsAndFeatureUpdates","updatesFromKeenthemes","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","UserProfileComponent","subheader","setTitle","setBreadcrumbs","title","linkText","linkPath","UserProfileModule","declarations","providers","PersonalInformationComponent","userProfileService","first_name","last_name","updateProfile"],"mappings":"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","file":"modules-user-profile-user-profile-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountInformationComponent } from './account-information/account-information.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { EmailSettingsComponent } from './email-settings/email-settings.component';\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\nimport { ProfileOverviewComponent } from './profile-overview/profile-overview.component';\nimport { SavedCreditCardsComponent } from './saved-credit-cards/saved-credit-cards.component';\nimport { StatementsComponent } from './statements/statements.component';\nimport { TaxInformationComponent } from './tax-information/tax-information.component';\nimport { UserProfileComponent } from './user-profile.component';\nimport { ProfilePaymentsInformationComponent } from './payments-information/payments-information.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfileComponent,\n    children: [\n      {\n        path: 'payment-information',\n        component: ProfilePaymentsInformationComponent,\n      },\n      {\n        path: 'profile-overview',\n        component: ProfileOverviewComponent,\n      },\n      {\n        path: 'personal-information',\n        component: PersonalInformationComponent,\n      },\n      {\n        path: 'account-information',\n        component: AccountInformationComponent\n      },\n      {\n        path: 'change-password',\n        component: ChangePasswordComponent\n      },\n      {\n        path: 'email-settings',\n        component: EmailSettingsComponent\n      },\n      {\n        path: 'saved-credic-cards',\n        component: SavedCreditCardsComponent\n      },\n      {\n        path: 'tax-information',\n        component: TaxInformationComponent\n      },\n      {\n        path: 'statements',\n        component: StatementsComponent\n      },\n      {path: '', redirectTo: 'profile-overview', pathMatch: 'full'},\n      {path: '**', redirectTo: 'profile-overview', pathMatch: 'full'},\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserProfileRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService, UserModel } from '../../../auth';\n\n@Component({\n  selector: 'app-profile-card',\n  templateUrl: './profile-card.component.html',\n  styleUrls: ['./profile-card.component.scss']\n})\nexport class ProfileCardComponent {\n  user$: Observable<UserModel>;\n  constructor(public userService: AuthService) {\n    this.user$ = this.userService.currentUserSubject.asObservable();\n  }\n}\n","<!--begin::Profile Card-->\n<div class=\"card card-custom card-stretch\" *ngIf=\"user$ | async as user\">\n  <!--begin::Body-->\n  <div class=\"card-body pt-4\">\n    <!--begin::User-->\n    <div class=\"d-flex align-items-center mb-5\">\n      <div class=\"symbol symbol-60 symbol-xxl-100 mr-5 align-self-start align-self-xxl-center\">\n        <div *ngIf=\"user.avatar\" class=\"symbol-label\" [style.backgroundImage]=\"'url('+ user.avatar +')'\"></div>\n        <div *ngIf=\"!user.avatar\" class=\"symbol-label\">{{user.fullname | firstLetter}}</div>\n        <i class=\"symbol-badge bg-success\"></i>\n      </div>\n      <div>\n                <span class=\"font-weight-bolder font-size-h5 text-dark-75\">\n                    {{user.fullname }}\n                </span>\n        <div class=\"text-success\">\n          Verified <i class=\"fas fa-check-circle text-success\"></i>\n        </div>\n        <div class=\"d-flex align-items-center\">\n          <span class=\"d-inline-block mb-0 mr-2 font-weight-bolder font-size-h5 text-dark-75\">{{ user.balance }}</span>\n          <img width=\"18\" src=\"./assets/media/svg/customs/coin.svg\" alt=\"\">\n        </div>\n      </div>\n    </div>\n    <!--end::User-->\n    \n    <!--begin::Nav-->\n    <div class=\"navi navi-bold navi-hover navi-active navi-link-rounded\">\n      <div class=\"navi-item mb-2\">\n        <a class=\"navi-link py-4\" routerLink=\"/user-profile/profile-overview\" routerLinkActive=\"active\">\n          <span class=\"navi-icon mr-2\">\n            <span [inlineSVG]=\"'./assets/media/svg/icons/Design/Layers.svg'\" cacheSVG=\"true\" class=\"svg-icon\"></span>\n          </span>\n          <span class=\"navi-text font-size-lg\">\n            Profile Overview\n          </span>\n        </a>\n      </div>\n      <div class=\"navi-item mb-2\">\n        <a class=\"navi-link py-4\" routerLink=\"/user-profile/personal-information\" routerLinkActive=\"active\">\n          <span class=\"navi-icon mr-2\">\n            <span [inlineSVG]=\"'./assets/media/svg/icons/General/User.svg'\" cacheSVG=\"true\" class=\"svg-icon\"></span>\n          </span>\n          <span class=\"navi-text font-size-lg\">\n            Personal Information\n          </span>\n        </a>\n      </div>\n      <!--<div class=\"navi-item mb-2\">\n          <a class=\"navi-link py-4\" routerLink=\"/user-profile/account-information\" routerLinkActive=\"active\">\n    <span class=\"navi-icon mr-2\">\n      <span [inlineSVG]=\"'./assets/media/svg/icons/Code/Compiling.svg'\" cacheSVG=\"true\" class=\"svg-icon\"></span>\n    </span>\n              <span class=\"navi-text font-size-lg\">\n      Account Information\n    </span>\n          </a>\n      </div>-->\n      <div class=\"navi-item mb-2\">\n        <a class=\"navi-link py-4\" routerLink=\"/user-profile/change-password\" routerLinkActive=\"active\">\n          <span class=\"navi-icon mr-2\">\n                    <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Shield-user.svg'\" cacheSVG=\"true\"\n                          class=\"svg-icon\"></span></span>\n          <span class=\"navi-text font-size-lg\">Change Password</span>\n        </a>\n      </div>\n      <div class=\"navi-item mb-2\">\n        <a class=\"navi-link py-4\" routerLink=\"/user-profile/payment-information\" routerLinkActive=\"active\">\n          <span class=\"navi-icon mr-2\">\n              <span [inlineSVG]=\"'./assets/media/svg/icons/Shopping/Wallet.svg'\"\n                    cacheSVG=\"true\" class=\"svg-icon\">\n              </span>\n          </span>\n          <span class=\"navi-text font-size-lg\">Payment Information</span>\n        </a>\n      </div>\n      <!--<div class=\"navi-item mb-2\">\n          <a class=\"navi-link py-4\" routerLink=\"/user-profile/email-settings\" routerLinkActive=\"active\">\n    <span class=\"navi-icon mr-2\">\n      <span [inlineSVG]=\"'./assets/media/svg/icons/Communication/Mail-opened.svg'\" cacheSVG=\"true\"\n            class=\"svg-icon\"></span>\n    </span>\n              <span class=\"navi-text font-size-lg\">\n      Email settings\n    </span>\n          </a>\n      </div>\n      <div class=\"navi-item mb-2\">\n          <a class=\"navi-link py-4 cursor-pointer\" ngbTooltip=\"Coming soon...\" triggers=\"manual\" #t=\"ngbTooltip\"\n             (click)=\"t.open()\" placement=\"right\">\n    <span class=\"navi-icon mr-2\">\n      <span [inlineSVG]=\"'./assets/media/svg/icons/Layout/Layout-top-panel-6.svg'\" cacheSVG=\"true\"\n            class=\"svg-icon\"></span>\n    </span>\n              <span class=\"navi-text font-size-lg\">\n      Saved Credit Cards\n    </span>\n          </a>\n      </div>\n      <div class=\"navi-item mb-2\">\n          <a class=\"navi-link py-4 cursor-pointer\" ngbTooltip=\"Coming soon...\" triggers=\"manual\" #t2=\"ngbTooltip\"\n             (click)=\"t2.open()\" placement=\"right\">\n    <span class=\"navi-icon mr-2\">\n      <span [inlineSVG]=\"'./assets/media/svg/icons/Files/File.svg'\" cacheSVG=\"true\" class=\"svg-icon\"></span>\n    </span>\n              <span class=\"navi-text font-size-lg\">Tax information</span>\n              <span class=\"navi-label\">\n      <span class=\"label label-light-primary label-inline font-weight-bold\">new</span>\n    </span>\n          </a>\n      </div>\n      <div class=\"navi-item mb-2\">\n          <a class=\"navi-link py-4 cursor-pointer\" ngbTooltip=\"Coming soon...\" triggers=\"manual\" #t3=\"ngbTooltip\"\n             (click)=\"t3.open()\" placement=\"right\">\n    <span class=\"navi-icon mr-2\">\n      <span [inlineSVG]=\"'./assets/media/svg/icons/Text/Article.svg'\" cacheSVG=\"true\" class=\"svg-icon\"></span>\n    </span>\n              <span class=\"navi-text\">\n      Statements\n    </span>\n          </a>\n      </div>-->\n    </div>\n    <!--end::Nav-->\n  </div>\n  <!--end::Body-->\n</div>\n<!--end::Profile Card-->\n","<ng-container *ngIf=\"user\">\n  <div class=\"card card-custom\" [formGroup]=\"formGroup\">\n    <!-- begin::Loading -->\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"progress progress-modal\">\n        <div\n            class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n            role=\"progressbar\"\n            style=\"width: 100%\"\n            aria-valuenow=\"100\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n        ></div>\n      </div>\n    </ng-container>\n    <!-- end::Loading -->\n    <!--begin::Header-->\n    <div class=\"card-header py-3\">\n      <div class=\"card-title align-items-start flex-column\">\n        <h3 class=\"card-label font-weight-bolder text-dark\">Change Password</h3>\n        <span class=\"text-muted font-weight-bold font-size-sm mt-1\">Change your account password</span>\n      </div>\n      <!--<div class=\"card-toolbar\">\n        <button type=\"submit\" [disabled]=\"formGroup.invalid\" class=\"btn btn-success mr-2\" (click)=\"save()\">Save Changes</button>\n        <button type=\"reset\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n      </div>-->\n    </div>\n    <!--end::Header-->\n    <!--begin::Form-->\n    <div class=\"form\">\n      <div class=\"card-body\">\n        <!--begin::Alert-->\n        <!--<div class=\"alert alert-custom alert-light-danger fade show mb-10\" role=\"alert\">\n          <div class=\"alert-icon\">\n            <span class=\"svg-icon svg-icon-3x svg-icon-danger\"\n              [inlineSVG]=\"'./assets/media/svg/icons/Code/Info-circle.svg'\"\n              cacheSVG=\"true\"\n            >\n            </span>\n          </div>\n          <div class=\"alert-text font-weight-bold\">Configure user passwords to expire periodically. Users will need\n            warning that their passwords are going to expire,\n            <br>or they might inadvertently get locked out of the system!\n          </div>\n          <div class=\"alert-close\">\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">\n                <i class=\"ki ki-close\"></i>\n              </span>\n            </button>\n          </div>\n        </div>-->\n        <!--end::Alert-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label text-alert\">Current Password</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <input type=\"password\"\n                   class=\"form-control form-control-lg form-control-solid mb-2\"\n                   placeholder=\"Current password\"\n                   autocomplete=\"off\"\n                   formControlName=\"currentPassword\"\n                   [class.is-invalid]=\"isControlInvalid('currentPassword')\"\n                   [class.is-valid]=\"isControlValid('currentPassword')\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('currentPassword')\">\n              Current password was entered correct\n            </div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('required', 'currentPassword')\">\n              Current password is required\n            </div>\n            <a class=\"text-sm font-weight-bold cursor-pointer\">Forgot password ?</a>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label text-alert\">New Password</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <input type=\"password\"\n                   class=\"form-control form-control-lg form-control-solid\"\n                   placeholder=\"New password\"\n                   autocomplete=\"off\"\n                   formControlName=\"password\"\n                   [class.is-invalid]=\"isControlInvalid('password')\"\n                   [class.is-valid]=\"isControlValid('password')\"\n            />\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label text-alert\">Verify Password</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <input type=\"password\"\n                   class=\"form-control form-control-lg form-control-solid\"\n                   placeholder=\"Confirm password\"\n                   autocomplete=\"off\"\n                   formControlName=\"cPassword\"\n                   [class.is-invalid]=\"isControlInvalid('cPassword')\"\n                   [class.is-valid]=\"isControlValid('cPassword')\"\n            />\n            <div class=\"valid-feedback\" *ngIf=\"isControlValid('cPassword')\">Password confirmation was entered correct\n            </div>\n            <div class=\"invalid-feedback\" *ngIf=\"controlHasError('ConfirmPassword', 'cPassword')\">'Passsword' and\n              'Confirm Password' didn't match.\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label text-alert\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <button type=\"submit\" [disabled]=\"formGroup.invalid\" class=\"btn btn-success mr-2\" (click)=\"save()\">\n              Save Changes\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--end::Form-->\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AuthService, ConfirmPasswordValidator, UserModel } from '../../auth';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  user: UserModel;\n  firstUserState: UserModel;\n  subscriptions: Subscription[] = [];\n  isLoading$: Observable<boolean>;\n\n  constructor(private userService: AuthService, private fb: FormBuilder) {\n    this.isLoading$ = this.userService.isLoadingSubject.asObservable();\n  }\n\n  ngOnInit(): void {\n    const sb = this.userService.currentUserSubject.asObservable().pipe(\n      first(user => !!user)\n    ).subscribe(user => {\n      this.user = Object.assign({}, user);\n      this.firstUserState = Object.assign({}, user);\n      this.loadForm();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      currentPassword: [this.user.password, Validators.required],\n      password: ['', Validators.required],\n      cPassword: ['', Validators.required]\n    }, {\n      validator: ConfirmPasswordValidator.MatchPassword\n    });\n  }\n\n  async save() {\n    this.formGroup.markAllAsTouched();\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.user.password = this.formGroup.value.password;\n    this.userService.isLoadingSubject.next(true);\n\n    try {\n      setTimeout(() => {\n        this.userService.currentUserSubject.next(Object.assign({}, this.user));\n        this.userService.isLoadingSubject.next(false);\n      }, 2000);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  cancel() {\n    this.user = Object.assign({}, this.firstUserState);\n    this.loadForm();\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n\n  controlHasError(validation, controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.hasError(validation) && (control.dirty || control.touched);\n  }\n\n  isControlTouched(controlName): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.dirty || control.touched;\n  }\n}\n","<ng-container *ngIf=\"user\">\n  <div class=\"card card-custom card-stretch\">\n    <!-- begin::Loading -->\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"progress progress-modal\">\n        <div\n            class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n            role=\"progressbar\"\n            style=\"width: 100%\"\n            aria-valuenow=\"100\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n        ></div>\n      </div>\n    </ng-container>\n    <!-- end::Loading -->\n    <!--begin::Header-->\n    <div class=\"card-header py-3\">\n      <div class=\"card-title align-items-start flex-column\">\n        <h3 class=\"card-label font-weight-bolder text-dark\">Payment Information</h3>\n        <span class=\"text-muted font-weight-bold font-size-sm mt-1\">Update your payment information</span>\n      </div>\n    </div>\n    <!--end::Header-->\n    <!--begin::Form-->\n    <div class=\"form\">\n      <!--begin::Body-->\n      <div class=\"card-body\">\n        <form [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\"\n              [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n          <div class=\"form-group row\">\n            <label class=\"col-sm-3 col-form-label\">Default Payment Method</label>\n            <div class=\"col-sm-6\">\n              <div class=\"d-flex align-items-center h-100\">\n                <mat-radio-group formControlName=\"type\">\n                  <mat-radio-button class=\"d-block mt-2 mr-0\" value=\"paypal\">Paypal</mat-radio-button>\n                  <mat-radio-button class=\"d-block mt-2 mr-0\" value=\"bank\">Bank Wire Transfer</mat-radio-button>\n                  <mat-radio-button class=\"d-block mt-2 mr-0\" value=\"payoneer\">Payoneer</mat-radio-button>\n                </mat-radio-group>\n              </div>\n            </div>\n          </div>\n        </form>\n        <hr>\n        <div class=\"d-none\" [ngClass]=\"{'d-block': form.value.type === 'paypal'}\">\n          <form [formGroup]=\"formPayPal\" novalidate (ngSubmit)=\"onSubmit()\"\n                [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Minimum payment amounts</label>\n              <div class=\"col-sm-6 form-inline\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">$20</span>\n                  </div>\n                  <!--          <p-spinner size=\"10\" formControlName=\"paypal_minimum_payment\" [min]=\"25\"></p-spinner>-->\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Name on the Account (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"paypal_account_name\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Paypal Email (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"paypal_email\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\"></label>\n              <div class=\"col-sm-6\">\n                <button [disabled]=\"form.invalid || formPayPal.invalid || submitted\" class=\"btn btn-primary btn-elevate\"\n                        type=\"submit\">\n                  Save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"d-none\" [ngClass]=\"{'d-block': form.value.type === 'bank'}\">\n          <form [formGroup]=\"formBank\" novalidate (ngSubmit)=\"onSubmit()\"\n                [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Minimum payment amounts</label>\n              <div class=\"col-sm-6 form-inline\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">$20</span>\n                  </div>\n                  <!--          <p-spinner size=\"10\" formControlName=\"bank_minimum_payment\" [min]=\"100\"></p-spinner>-->\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Bank Name (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_name\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Bank Address</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_address\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Name on the Account (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_account_name\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Account Number (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_account_number\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">IBAN #</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_iban\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Routing Number #</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_routing_number\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Swift Code # (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"bank_swift_code\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Phone Number</label>\n              <div class=\"col-sm-6\">\n                <input type=\"tel\" class=\"form-control\" formControlName=\"bank_phone_number\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\"></label>\n              <div class=\"col-sm-6\">\n                <button [disabled]=\"form.invalid || formBank.invalid || submitted\" class=\"btn btn-primary btn-elevate\"\n                        type=\"submit\">\n                  Save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"d-none\" [ngClass]=\"{'d-block': form.value.type === 'payoneer'}\">\n          <form [formGroup]=\"formPayoneer\" novalidate (ngSubmit)=\"onSubmit()\"\n                [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Minimum payment amounts</label>\n              <div class=\"col-sm-6 form-inline\">\n                <div class=\"input-group\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\">$20</span>\n                  </div>\n                  <!--          <p-spinner size=\"10\" formControlName=\"payoneer_minimum_payment\" [min]=\"25\"></p-spinner>-->\n                </div>\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Name on the Account (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"payoneer_account_name\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\">Payoneer Email (<span class=\"text-danger\">*</span>)</label>\n              <div class=\"col-sm-6\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"payoneer_email\">\n              </div>\n            </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-3 col-form-label\"></label>\n              <div class=\"col-sm-6\">\n                <button [disabled]=\"form.invalid || formPayoneer.invalid || submitted\" class=\"btn btn-primary btn-elevate\"\n                        type=\"submit\">\n                  Save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <!--end::Body-->\n    </div>\n    <!--end::Form-->\n  </div>\n</ng-container>\n\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, UserModel } from '../../auth';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Constants } from '@core/configs/constants';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-payments-information',\n  templateUrl: './payments-information.component.html',\n  styleUrls: ['./payments-information.component.scss']\n})\nexport class ProfilePaymentsInformationComponent implements OnInit, OnDestroy {\n  submitted: boolean;\n\n  form: FormGroup;\n  formPayPal: FormGroup;\n  formPayoneer: FormGroup;\n  formBank: FormGroup;\n\n  validationMessages = {\n    name: {\n      required: 'Name is required.',\n      minlength: 'Name must be at least 3 characters.',\n      maxlength: 'Name can\\'t be longer than 200 characters.'\n    },\n    minimum_payment: {\n      required: 'Minimum payment amounts is required.',\n      number: 'Invalid amount.'\n    },\n    phone: {\n      phoneFormat: 'Invalid phone number.'\n    }\n  };\n\n  user: UserModel;\n  firstUserState: UserModel;\n  subscriptions: Subscription[] = [];\n  // avatarPic = 'none';\n  isLoading$: Observable<boolean>;\n\n  constants = Constants;\n\n  constructor(private fb: FormBuilder,\n              public authService: AuthService,\n              public snackBar: MatSnackBar) {\n    this.isLoading$ = this.authService.isLoadingSubject.asObservable();\n\n    this.form = this.fb.group({\n      type: ['paypal', Validators.compose([\n        Validators.required\n      ])]\n    });\n    this.formPayPal = this.fb.group({\n      paypal_account_name: [null, Validators.compose([\n        Validators.required\n      ])],\n      paypal_email: [null, Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      paypal_minimum_payment: [25]\n    });\n    this.formBank = this.fb.group({\n      bank_account_name: [null, Validators.compose([\n        Validators.required\n      ])],\n      bank_name: [null, Validators.compose([\n        Validators.required\n      ])],\n      bank_address: [null],\n      bank_account_number: [null, Validators.compose([\n        Validators.required\n      ])],\n      bank_iban: [null],\n      bank_routing_number: [null],\n      bank_swift_code: [null, Validators.compose([\n        Validators.required\n      ])],\n      bank_phone_number: [null],\n      bank_minimum_payment: [100]\n    });\n    this.formPayoneer = this.fb.group({\n      payoneer_account_name: [null, Validators.compose([\n        Validators.required\n      ])],\n      payoneer_email: [null, Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      payoneer_minimum_payment: [25]\n    });\n  }\n\n  ngOnInit() {\n    const sb = this.authService.currentUserSubject.asObservable().pipe(\n      first(user => !!user)\n    ).subscribe(user => {\n      console.log(user);\n      this.user = Object.assign({}, user);\n      this.firstUserState = Object.assign({}, user);\n      this.getData();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  async getData() {\n    const resPayment: any = await this.authService.paymentGet().toPromise();\n    // console.log(resPayment);\n    if (resPayment && resPayment.data && resPayment.data[0]) {\n      this.form.patchValue({\n        ...resPayment.data[0]\n      });\n      this.formPayPal.patchValue({\n        ...resPayment.data[0],\n        paypal_minimum_payment: resPayment.data[0].paypal_minimum_payment ? resPayment.data[0].paypal_minimum_payment : 25\n      });\n      this.formBank.patchValue({\n        ...resPayment.data[0],\n        bank_minimum_payment: resPayment.data[0].bank_minimum_payment ? resPayment.data[0].bank_minimum_payment : 100\n      });\n      this.formPayoneer.patchValue({\n        ...resPayment.data[0],\n        payoneer_minimum_payment: resPayment.data[0].payoneer_minimum_payment ? resPayment.data[0].payoneer_minimum_payment : 25\n      });\n    }\n  }\n\n  async onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n\n    // const { name } = this.form.value;\n    console.log(this.form.value);\n    // tslint:disable-next-line:max-line-length\n    this.formPayPal.value.paypal_minimum_payment = this.formPayPal.value.paypal_minimum_payment ? this.formPayPal.value.paypal_minimum_payment : 25;\n    this.formBank.value.bank_minimum_payment = this.formBank.value.bank_minimum_payment ? this.formBank.value.bank_minimum_payment : 100;\n    // tslint:disable-next-line:max-line-length\n    this.formPayoneer.value.payoneer_minimum_payment = this.formPayoneer.value.payoneer_minimum_payment ? this.formPayoneer.value.payoneer_minimum_payment : 25;\n\n    let body;\n    body = {\n      ...this.formPayPal.value,\n      ...this.formBank.value,\n      ...this.formPayoneer.value,\n      minimum_payment: this.constants.minimumPayment\n    };\n\n    try {\n      const result: any = await this.authService.paymentUpdate({\n        type: this.form.value.type,\n        default_payment_method: this.form.value.type,\n        ...body\n      }).toPromise();\n      // const result = null;\n      if (result) {\n        this.snackBar.open('Payment information has been updated successfully', 'Success', {\n          duration: 2000,\n        });\n        // this.successMessage = 'Payment information has been updated successfully';\n        // this.messageService.add({ severity: 'success', summary: '', detail: 'Update successful' });\n      }\n      // console.log(result);\n    } catch (error) {\n      console.log(error);\n      this.snackBar.open(error.error.meta.messages, 'Error', {\n        duration: 2000,\n        panelClass: ['bg-danger']\n      });\n      // this.errorMessage = error.error.meta.messages;\n      // const message: ErrorResponse = error;\n      // if (message.error.meta.messages) {\n      //   // this.errorMessage = message.error.meta.messages;\n      //   this.messageService.add({ severity: 'error', summary: '', detail: message.error.meta.messages });\n      // }\n    }\n    this.submitted = false;\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AuthService, UserModel } from '../../auth';\n\n@Component({\n  selector: 'app-account-information',\n  templateUrl: './account-information.component.html',\n  styleUrls: ['./account-information.component.scss']\n})\nexport class AccountInformationComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  user: UserModel;\n  firstUserState: UserModel;\n  subscriptions: Subscription[] = [];\n  isLoading$: Observable<boolean>;\n\n  constructor(private userService: AuthService, private fb: FormBuilder) {\n    this.isLoading$ = this.userService.isLoadingSubject.asObservable();\n  }\n\n  ngOnInit(): void {\n    const sb = this.userService.currentUserSubject.asObservable().pipe(\n      first(user => !!user)\n    ).subscribe(user => {\n      this.user = Object.assign({}, user);\n      this.firstUserState = Object.assign({}, user);\n      this.loadForm();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      username: [this.user.username, Validators.required],\n      email: [this.user.email, Validators.compose([Validators.required, Validators.email])],\n      language: [this.user.language],\n      timeZone: [this.user.timeZone],\n      communicationEmail: [this.user.communication.email],\n      communicationSMS: [this.user.communication.sms],\n      communicationPhone: [this.user.communication.phone]\n    });\n  }\n\n  save() {\n    this.formGroup.markAllAsTouched();\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n\n    const formValues = this.formGroup.value;\n    // prepar user\n    this.user = Object.assign(this.user, {\n      username: formValues.username,\n      email: formValues.email,\n      language: formValues.language,\n      timeZone: formValues.timeZone,\n      communication: {\n        email: formValues.communicationEmail,\n        sms: formValues.communicationSMS,\n        phone: formValues.communicationPhone\n      }\n    });\n\n    // Do request to your server for user update, we just imitate user update there\n    this.userService.isLoadingSubject.next(true);\n    setTimeout(() => {\n      this.userService.currentUserSubject.next(Object.assign({}, this.user));\n      this.userService.isLoadingSubject.next(false);\n    }, 2000);\n  }\n\n  cancel() {\n    this.user = Object.assign({}, this.firstUserState);\n    this.loadForm();\n  }\n\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.formGroup.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n}\n","<ng-container *ngIf=\"user\">\n  <div class=\"card card-custom\" [formGroup]=\"formGroup\">\n    <!-- begin::Loading -->\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"progress progress-modal\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n          style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n      </div>\n    </ng-container>\n    <!-- end::Loading -->\n    <!--begin::Header-->\n    <div class=\"card-header py-3\">\n      <div class=\"card-title align-items-start flex-column\">\n        <h3 class=\"card-label font-weight-bolder text-dark\">Account Information</h3>\n        <span class=\"text-muted font-weight-bold font-size-sm mt-1\">Change your account settings</span>\n      </div>\n      <div class=\"card-toolbar\">\n        <button type=\"submit\" [disabled]=\"formGroup.invalid\" class=\"btn btn-success mr-2\" (click)=\"save()\">Save\n          Changes</button>\n        <button type=\"reset\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n      </div>\n    </div>\n    <!--end::Header-->\n    <!--begin::Form-->\n    <div class=\"form\">\n      <div class=\"card-body\">\n        <!--begin::Heading-->\n        <div class=\"row\">\n          <label class=\"col-xl-3\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <h5 class=\"font-weight-bold mb-6\">Account:</h5>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div>\n              <input class=\"form-control form-control-lg form-control-solid\" type=\"text\" formControlName=\"username\"\n                [class.is-invalid]=\"isControlInvalid('username')\" [class.is-valid]=\"isControlValid('username')\" />\n            </div>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Email Address</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"input-group input-group-lg input-group-solid\">\n              <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\">\n                  <i class=\"fa fa-at\"></i>\n                </span>\n              </div>\n              <input type=\"email\" class=\"form-control form-control-lg form-control-solid\" placeholder=\"Email\"\n                formControlName=\"email\" [class.is-invalid]=\"isControlInvalid('email')\"\n                [class.is-valid]=\"isControlValid('email')\" />\n            </div>\n            <span class=\"form-text text-muted\">Email will not be publicly displayed.\n              <a class=\"font-weight-bold\">Learn more</a>.</span>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <select class=\"form-control form-control-lg form-control-solid\" formControlName=\"language\">\n              <option>Select Language...</option>\n              <option value=\"id\">Bahasa Indonesia - Indonesian</option>\n              <option value=\"msa\">Bahasa Melayu - Malay</option>\n              <option value=\"ca\">Català - Catalan</option>\n              <option value=\"cs\">Čeština - Czech</option>\n              <option value=\"da\">Dansk - Danish</option>\n              <option value=\"de\">Deutsch - German</option>\n              <option value=\"en\">English</option>\n              <option value=\"en-gb\">English UK - British English</option>\n              <option value=\"es\">Español - Spanish</option>\n              <option value=\"eu\">Euskara - Basque (beta)</option>\n              <option value=\"fil\">Filipino</option>\n              <option value=\"fr\">Français - French</option>\n              <option value=\"ga\">Gaeilge - Irish (beta)</option>\n              <option value=\"gl\">Galego - Galician (beta)</option>\n              <option value=\"hr\">Hrvatski - Croatian</option>\n              <option value=\"it\">Italiano - Italian</option>\n              <option value=\"hu\">Magyar - Hungarian</option>\n              <option value=\"nl\">Nederlands - Dutch</option>\n              <option value=\"no\">Norsk - Norwegian</option>\n              <option value=\"pl\">Polski - Polish</option>\n              <option value=\"pt\">Português - Portuguese</option>\n              <option value=\"ro\">Română - Romanian</option>\n              <option value=\"sk\">Slovenčina - Slovak</option>\n              <option value=\"fi\">Suomi - Finnish</option>\n              <option value=\"sv\">Svenska - Swedish</option>\n              <option value=\"vi\">Tiếng Việt - Vietnamese</option>\n              <option value=\"tr\">Türkçe - Turkish</option>\n              <option value=\"el\">Ελληνικά - Greek</option>\n              <option value=\"bg\">Български език - Bulgarian</option>\n              <option value=\"ru\">Русский - Russian</option>\n              <option value=\"sr\">Српски - Serbian</option>\n              <option value=\"uk\">Українська мова - Ukrainian</option>\n              <option value=\"he\">עִבְרִית - Hebrew</option>\n              <option value=\"ur\">اردو - Urdu (beta)</option>\n              <option value=\"ar\">العربية - Arabic</option>\n              <option value=\"fa\">فارسی - Persian</option>\n              <option value=\"mr\">मराठी - Marathi</option>\n              <option value=\"hi\">हिन्दी - Hindi</option>\n              <option value=\"bn\">বাংলা - Bangla</option>\n              <option value=\"gu\">ગુજરાતી - Gujarati</option>\n              <option value=\"ta\">தமிழ் - Tamil</option>\n              <option value=\"kn\">ಕನ್ನಡ - Kannada</option>\n              <option value=\"th\">ภาษาไทย - Thai</option>\n              <option value=\"ko\">한국어 - Korean</option>\n              <option value=\"ja\">日本語 - Japanese</option>\n              <option value=\"zh-cn\">简体中文 - Simplified Chinese</option>\n              <option value=\"zh-tw\">繁體中文 - Traditional Chinese</option>\n            </select>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Time Zone</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <select class=\"form-control form-control-lg form-control-solid\" formControlName=\"timeZone\">\n              <option data-offset=\"-39600\" value=\"International Date Line West\">(GMT-11:00) International Date Line West\n              </option>\n              <option data-offset=\"-39600\" value=\"Midway Island\">(GMT-11:00) Midway Island</option>\n              <option data-offset=\"-39600\" value=\"Samoa\">(GMT-11:00) Samoa</option>\n              <option data-offset=\"-36000\" value=\"Hawaii\">(GMT-10:00) Hawaii</option>\n              <option data-offset=\"-28800\" value=\"Alaska\">(GMT-08:00) Alaska</option>\n              <option data-offset=\"-25200\" value=\"Pacific Time (US &amp; Canada)\">(GMT-07:00) Pacific Time (US &amp;\n                Canada)</option>\n              <option data-offset=\"-25200\" value=\"Tijuana\">(GMT-07:00) Tijuana</option>\n              <option data-offset=\"-25200\" value=\"Arizona\">(GMT-07:00) Arizona</option>\n              <option data-offset=\"-21600\" value=\"Mountain Time (US &amp; Canada)\">(GMT-06:00) Mountain Time (US &amp;\n                Canada)</option>\n              <option data-offset=\"-21600\" value=\"Chihuahua\">(GMT-06:00) Chihuahua</option>\n              <option data-offset=\"-21600\" value=\"Mazatlan\">(GMT-06:00) Mazatlan</option>\n              <option data-offset=\"-21600\" value=\"Saskatchewan\">(GMT-06:00) Saskatchewan</option>\n              <option data-offset=\"-21600\" value=\"Central America\">(GMT-06:00) Central America</option>\n              <option data-offset=\"-18000\" value=\"Central Time (US &amp; Canada)\">(GMT-05:00) Central Time (US &amp;\n                Canada)</option>\n              <option data-offset=\"-18000\" value=\"Guadalajara\">(GMT-05:00) Guadalajara</option>\n              <option data-offset=\"-18000\" value=\"Mexico City\">(GMT-05:00) Mexico City</option>\n              <option data-offset=\"-18000\" value=\"Monterrey\">(GMT-05:00) Monterrey</option>\n              <option data-offset=\"-18000\" value=\"Bogota\">(GMT-05:00) Bogota</option>\n              <option data-offset=\"-18000\" value=\"Lima\">(GMT-05:00) Lima</option>\n              <option data-offset=\"-18000\" value=\"Quito\">(GMT-05:00) Quito</option>\n              <option data-offset=\"-14400\" value=\"Eastern Time (US &amp; Canada)\">(GMT-04:00) Eastern Time (US &amp;\n                Canada)</option>\n              <option data-offset=\"-14400\" value=\"Indiana (East)\">(GMT-04:00) Indiana (East)</option>\n              <option data-offset=\"-14400\" value=\"Caracas\">(GMT-04:00) Caracas</option>\n              <option data-offset=\"-14400\" value=\"La Paz\">(GMT-04:00) La Paz</option>\n              <option data-offset=\"-14400\" value=\"Georgetown\">(GMT-04:00) Georgetown</option>\n              <option data-offset=\"-10800\" value=\"Atlantic Time (Canada)\">(GMT-03:00) Atlantic Time (Canada)</option>\n              <option data-offset=\"-10800\" value=\"Santiago\">(GMT-03:00) Santiago</option>\n              <option data-offset=\"-10800\" value=\"Brasilia\">(GMT-03:00) Brasilia</option>\n              <option data-offset=\"-10800\" value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\n              <option data-offset=\"-9000\" value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\n              <option data-offset=\"-7200\" value=\"Greenland\">(GMT-02:00) Greenland</option>\n              <option data-offset=\"-7200\" value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\n              <option data-offset=\"-3600\" value=\"Cape Verde Is.\">(GMT-01:00) Cape Verde Is.</option>\n              <option data-offset=\"0\" value=\"Azores\">(GMT) Azores</option>\n              <option data-offset=\"0\" value=\"Monrovia\">(GMT) Monrovia</option>\n              <option data-offset=\"0\" value=\"UTC\">(GMT) UTC</option>\n              <option data-offset=\"3600\" value=\"Dublin\">(GMT+01:00) Dublin</option>\n              <option data-offset=\"3600\" value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\n              <option data-offset=\"3600\" value=\"Lisbon\">(GMT+01:00) Lisbon</option>\n              <option data-offset=\"3600\" value=\"London\">(GMT+01:00) London</option>\n              <option data-offset=\"3600\" value=\"Casablanca\">(GMT+01:00) Casablanca</option>\n              <option data-offset=\"3600\" value=\"West Central Africa\">(GMT+01:00) West Central Africa</option>\n              <option data-offset=\"7200\" value=\"Belgrade\">(GMT+02:00) Belgrade</option>\n              <option data-offset=\"7200\" value=\"Bratislava\">(GMT+02:00) Bratislava</option>\n              <option data-offset=\"7200\" value=\"Budapest\">(GMT+02:00) Budapest</option>\n              <option data-offset=\"7200\" value=\"Ljubljana\">(GMT+02:00) Ljubljana</option>\n              <option data-offset=\"7200\" value=\"Prague\">(GMT+02:00) Prague</option>\n              <option data-offset=\"7200\" value=\"Sarajevo\">(GMT+02:00) Sarajevo</option>\n              <option data-offset=\"7200\" value=\"Skopje\">(GMT+02:00) Skopje</option>\n              <option data-offset=\"7200\" value=\"Warsaw\">(GMT+02:00) Warsaw</option>\n              <option data-offset=\"7200\" value=\"Zagreb\">(GMT+02:00) Zagreb</option>\n              <option data-offset=\"7200\" value=\"Brussels\">(GMT+02:00) Brussels</option>\n              <option data-offset=\"7200\" value=\"Copenhagen\">(GMT+02:00) Copenhagen</option>\n              <option data-offset=\"7200\" value=\"Madrid\">(GMT+02:00) Madrid</option>\n              <option data-offset=\"7200\" value=\"Paris\">(GMT+02:00) Paris</option>\n              <option data-offset=\"7200\" value=\"Amsterdam\">(GMT+02:00) Amsterdam</option>\n              <option data-offset=\"7200\" value=\"Berlin\">(GMT+02:00) Berlin</option>\n              <option data-offset=\"7200\" value=\"Bern\">(GMT+02:00) Bern</option>\n              <option data-offset=\"7200\" value=\"Rome\">(GMT+02:00) Rome</option>\n              <option data-offset=\"7200\" value=\"Stockholm\">(GMT+02:00) Stockholm</option>\n              <option data-offset=\"7200\" value=\"Vienna\">(GMT+02:00) Vienna</option>\n              <option data-offset=\"7200\" value=\"Cairo\">(GMT+02:00) Cairo</option>\n              <option data-offset=\"7200\" value=\"Harare\">(GMT+02:00) Harare</option>\n              <option data-offset=\"7200\" value=\"Pretoria\">(GMT+02:00) Pretoria</option>\n              <option data-offset=\"10800\" value=\"Bucharest\">(GMT+03:00) Bucharest</option>\n              <option data-offset=\"10800\" value=\"Helsinki\">(GMT+03:00) Helsinki</option>\n              <option data-offset=\"10800\" value=\"Kiev\">(GMT+03:00) Kiev</option>\n              <option data-offset=\"10800\" value=\"Kyiv\">(GMT+03:00) Kyiv</option>\n              <option data-offset=\"10800\" value=\"Riga\">(GMT+03:00) Riga</option>\n              <option data-offset=\"10800\" value=\"Sofia\">(GMT+03:00) Sofia</option>\n              <option data-offset=\"10800\" value=\"Tallinn\">(GMT+03:00) Tallinn</option>\n              <option data-offset=\"10800\" value=\"Vilnius\">(GMT+03:00) Vilnius</option>\n              <option data-offset=\"10800\" value=\"Athens\">(GMT+03:00) Athens</option>\n              <option data-offset=\"10800\" value=\"Istanbul\">(GMT+03:00) Istanbul</option>\n              <option data-offset=\"10800\" value=\"Minsk\">(GMT+03:00) Minsk</option>\n              <option data-offset=\"10800\" value=\"Jerusalem\">(GMT+03:00) Jerusalem</option>\n              <option data-offset=\"10800\" value=\"Moscow\">(GMT+03:00) Moscow</option>\n              <option data-offset=\"10800\" value=\"St. Petersburg\">(GMT+03:00) St. Petersburg</option>\n              <option data-offset=\"10800\" value=\"Volgograd\">(GMT+03:00) Volgograd</option>\n              <option data-offset=\"10800\" value=\"Kuwait\">(GMT+03:00) Kuwait</option>\n              <option data-offset=\"10800\" value=\"Riyadh\">(GMT+03:00) Riyadh</option>\n              <option data-offset=\"10800\" value=\"Nairobi\">(GMT+03:00) Nairobi</option>\n              <option data-offset=\"10800\" value=\"Baghdad\">(GMT+03:00) Baghdad</option>\n              <option data-offset=\"14400\" value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\n              <option data-offset=\"14400\" value=\"Muscat\">(GMT+04:00) Muscat</option>\n              <option data-offset=\"14400\" value=\"Baku\">(GMT+04:00) Baku</option>\n              <option data-offset=\"14400\" value=\"Tbilisi\">(GMT+04:00) Tbilisi</option>\n              <option data-offset=\"14400\" value=\"Yerevan\">(GMT+04:00) Yerevan</option>\n              <option data-offset=\"16200\" value=\"Tehran\">(GMT+04:30) Tehran</option>\n              <option data-offset=\"16200\" value=\"Kabul\">(GMT+04:30) Kabul</option>\n              <option data-offset=\"18000\" value=\"Ekaterinburg\">(GMT+05:00) Ekaterinburg</option>\n              <option data-offset=\"18000\" value=\"Islamabad\">(GMT+05:00) Islamabad</option>\n              <option data-offset=\"18000\" value=\"Karachi\">(GMT+05:00) Karachi</option>\n              <option data-offset=\"18000\" value=\"Tashkent\">(GMT+05:00) Tashkent</option>\n              <option data-offset=\"19800\" value=\"Chennai\">(GMT+05:30) Chennai</option>\n              <option data-offset=\"19800\" value=\"Kolkata\">(GMT+05:30) Kolkata</option>\n              <option data-offset=\"19800\" value=\"Mumbai\">(GMT+05:30) Mumbai</option>\n              <option data-offset=\"19800\" value=\"New Delhi\">(GMT+05:30) New Delhi</option>\n              <option data-offset=\"19800\" value=\"Sri Jayawardenepura\">(GMT+05:30) Sri Jayawardenepura</option>\n              <option data-offset=\"20700\" value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\n              <option data-offset=\"21600\" value=\"Astana\">(GMT+06:00) Astana</option>\n              <option data-offset=\"21600\" value=\"Dhaka\">(GMT+06:00) Dhaka</option>\n              <option data-offset=\"21600\" value=\"Almaty\">(GMT+06:00) Almaty</option>\n              <option data-offset=\"21600\" value=\"Urumqi\">(GMT+06:00) Urumqi</option>\n              <option data-offset=\"23400\" value=\"Rangoon\">(GMT+06:30) Rangoon</option>\n              <option data-offset=\"25200\" value=\"Novosibirsk\">(GMT+07:00) Novosibirsk</option>\n              <option data-offset=\"25200\" value=\"Bangkok\">(GMT+07:00) Bangkok</option>\n              <option data-offset=\"25200\" value=\"Hanoi\">(GMT+07:00) Hanoi</option>\n              <option data-offset=\"25200\" value=\"Jakarta\">(GMT+07:00) Jakarta</option>\n              <option data-offset=\"25200\" value=\"Krasnoyarsk\">(GMT+07:00) Krasnoyarsk</option>\n              <option data-offset=\"28800\" value=\"Beijing\">(GMT+08:00) Beijing</option>\n              <option data-offset=\"28800\" value=\"Chongqing\">(GMT+08:00) Chongqing</option>\n              <option data-offset=\"28800\" value=\"Hong Kong\">(GMT+08:00) Hong Kong</option>\n              <option data-offset=\"28800\" value=\"Kuala Lumpur\">(GMT+08:00) Kuala Lumpur</option>\n              <option data-offset=\"28800\" value=\"Singapore\">(GMT+08:00) Singapore</option>\n              <option data-offset=\"28800\" value=\"Taipei\">(GMT+08:00) Taipei</option>\n              <option data-offset=\"28800\" value=\"Perth\">(GMT+08:00) Perth</option>\n              <option data-offset=\"28800\" value=\"Irkutsk\">(GMT+08:00) Irkutsk</option>\n              <option data-offset=\"28800\" value=\"Ulaan Bataar\">(GMT+08:00) Ulaan Bataar</option>\n              <option data-offset=\"32400\" value=\"Seoul\">(GMT+09:00) Seoul</option>\n              <option data-offset=\"32400\" value=\"Osaka\">(GMT+09:00) Osaka</option>\n              <option data-offset=\"32400\" value=\"Sapporo\">(GMT+09:00) Sapporo</option>\n              <option data-offset=\"32400\" value=\"Tokyo\">(GMT+09:00) Tokyo</option>\n              <option data-offset=\"32400\" value=\"Yakutsk\">(GMT+09:00) Yakutsk</option>\n              <option data-offset=\"34200\" value=\"Darwin\">(GMT+09:30) Darwin</option>\n              <option data-offset=\"34200\" value=\"Adelaide\">(GMT+09:30) Adelaide</option>\n              <option data-offset=\"36000\" value=\"Canberra\">(GMT+10:00) Canberra</option>\n              <option data-offset=\"36000\" value=\"Melbourne\">(GMT+10:00) Melbourne</option>\n              <option data-offset=\"36000\" value=\"Sydney\">(GMT+10:00) Sydney</option>\n              <option data-offset=\"36000\" value=\"Brisbane\">(GMT+10:00) Brisbane</option>\n              <option data-offset=\"36000\" value=\"Hobart\">(GMT+10:00) Hobart</option>\n              <option data-offset=\"36000\" value=\"Vladivostok\">(GMT+10:00) Vladivostok</option>\n              <option data-offset=\"36000\" value=\"Guam\">(GMT+10:00) Guam</option>\n              <option data-offset=\"36000\" value=\"Port Moresby\">(GMT+10:00) Port Moresby</option>\n              <option data-offset=\"36000\" value=\"Solomon Is.\">(GMT+10:00) Solomon Is.</option>\n              <option data-offset=\"39600\" value=\"Magadan\">(GMT+11:00) Magadan</option>\n              <option data-offset=\"39600\" value=\"New Caledonia\">(GMT+11:00) New Caledonia</option>\n              <option data-offset=\"43200\" value=\"Fiji\">(GMT+12:00) Fiji</option>\n              <option data-offset=\"43200\" value=\"Kamchatka\">(GMT+12:00) Kamchatka</option>\n              <option data-offset=\"43200\" value=\"Marshall Is.\">(GMT+12:00) Marshall Is.</option>\n              <option data-offset=\"43200\" value=\"Auckland\">(GMT+12:00) Auckland</option>\n              <option data-offset=\"43200\" value=\"Wellington\">(GMT+12:00) Wellington</option>\n              <option data-offset=\"46800\" value=\"Nuku'alofa\">(GMT+13:00) Nuku'alofa</option>\n            </select>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row align-items-center\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Communication</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"checkbox-inline\">\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"communicationEmail\" />\n                <span></span>Email</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"communicationSMS\" />\n                <span></span>SMS</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"communicationPhone\" />\n                <span></span>Phone</label>\n            </div>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"separator separator-dashed my-5\"></div>\n        <!--begin::Form Group-->\n        <div class=\"row\">\n          <label class=\"col-xl-3\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <h5 class=\"font-weight-bold mb-6\">Security:</h5>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Login verification</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <button type=\"button\" class=\"btn btn-light-primary font-weight-bold btn-sm\">Setup login\n              verification</button>\n            <p class=\"form-text text-muted pt-2\">After you log in, you will be asked for additional information to\n              confirm your identity and protect your account from being compromised.\n              <a class=\"font-weight-bold cursor-pointer\">Learn more</a>.</p>\n          </div>\n        </div>\n        <!--begin::Form Group-->\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label\">Password reset verification</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"checkbox-inline\">\n              <label class=\"checkbox m-0\">\n                <input type=\"checkbox\" />\n                <span></span>Require personal information to reset your password.</label>\n            </div>\n            <p class=\"form-text text-muted py-2\">For extra security, this requires you to confirm your email or phone\n              number when you reset your password.\n              <a class=\"font-weight-boldk cursor-pointer\">Learn more</a>.</p>\n            <button type=\"button\" class=\"btn btn-light-danger font-weight-bold btn-sm\">Deactivate your account\n              ?</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--end::Form-->\n  </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tax-information',\n  templateUrl: './tax-information.component.html',\n  styleUrls: ['./tax-information.component.scss']\n})\nexport class TaxInformationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tax-information works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-statements',\n  templateUrl: './statements.component.html',\n  styleUrls: ['./statements.component.scss']\n})\nexport class StatementsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>statements works!</p>\n","import { Component } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { Observable } from 'rxjs';\nimport { AuthService, UserModel } from '../../auth';\n\n@Component({\n  selector: 'app-profile-overview',\n  templateUrl: './profile-overview.component.html',\n  styleUrls: ['./profile-overview.component.scss']\n})\nexport class ProfileOverviewComponent {\n  env = environment;\n  user$: Observable<UserModel>;\n  constructor(private auth: AuthService) {\n    this.user$ = this.auth.currentUserSubject.asObservable();\n  }\n}\n","<div class=\"card\">\n    <div class=\"card-header\">Profile Overview</div>\n    <div class=\"card-body pt-8\" *ngIf=\"user$ | async as _user\">\n        <div class=\"d-flex align-items-center mb-10\">\n            <div class=\"symbol symbol-40 symbol-light-primary mr-5\">\n          <span class=\"symbol-label\">\n              <span class=\"svg-icon svg-icon-lg svg-icon-primary d-flex align-items-center\">\n                  <i class=\"fab fa-facebook-f\"></i>\n              </span>\n          </span>\n            </div>\n            <div class=\"d-flex flex-column font-weight-bold\">\n                <a class=\"text-dark text-hover-primary mb-1 font-size-lg cursor-pointer\">Facebook Profile</a>\n                <a href=\"https://www.facebook.com/johntran112\" target=\"_blank\" class=\"text-muted\">\n                    https://www.facebook.com/johntran112\n                </a>\n            </div>\n        </div>\n        <div class=\"d-flex align-items-center mb-10\">\n            <div class=\"symbol symbol-40 symbol-light-primary mr-5\">\n          <span class=\"symbol-label\">\n              <span class=\"svg-icon svg-icon-lg svg-icon-primary d-flex align-items-center\">\n                  <i class=\"fab fa-facebook-f\"></i>\n              </span>\n          </span>\n            </div>\n            <div class=\"d-flex flex-column font-weight-bold\">\n                <a class=\"text-dark text-hover-primary mb-1 font-size-lg cursor-pointer\">Facebook ID</a>\n                <span class=\"text-muted\">\n                    3986706474684886\n                </span>\n            </div>\n        </div>\n        <!--<div class=\"d-flex align-items-center mb-10\">\n            <div class=\"symbol symbol-40 symbol-light-primary mr-5\">\n          <span class=\"symbol-label\">\n              <span class=\"svg-icon svg-icon-lg svg-icon-primary d-flex align-items-center\">\n                  <i class=\"fas fa-link\"></i>\n              </span>\n          </span>\n            </div>\n            <div class=\"d-flex flex-column font-weight-bold\">\n                <a class=\"text-dark text-hover-primary mb-1 font-size-lg cursor-pointer\">Refer-A-Friend Program</a>\n                <a href=\"#\" class=\"text-muted\" cdkCopyToClipboard=\"{{ env.domain.app }}/?rid=4275249\"\n                   ngbTooltip=\"Copied!\" triggers=\"click:blur\">\n                    {{ env.domain.app }}/?rid={{_user.hash_id}}\n                </a>\n            </div>\n        </div>\n        <div class=\"d-flex align-items-center mb-10\">\n            <div class=\"symbol symbol-40 symbol-light-primary mr-5\">\n          <span class=\"symbol-label\">\n              <span class=\"svg-icon svg-icon-lg svg-icon-primary d-flex align-items-center\">\n                  <i class=\"fab fa-facebook-f\"></i>\n              </span>\n          </span>\n            </div>\n            <div class=\"d-flex flex-column font-weight-bold\">\n                <a class=\"text-dark text-hover-primary mb-1 font-size-lg cursor-pointer\">Invited You</a>\n                <span class=\"text-muted\">admin@fanlike.net</span>\n            </div>\n        </div>-->\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-saved-credit-cards',\n  templateUrl: './saved-credit-cards.component.html',\n  styleUrls: ['./saved-credit-cards.component.scss']\n})\nexport class SavedCreditCardsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>saved-credit-cards works!</p>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AuthService, UserModel } from '../../auth';\n\n@Component({\n  selector: 'app-email-settings',\n  templateUrl: './email-settings.component.html',\n  styleUrls: ['./email-settings.component.scss']\n})\nexport class EmailSettingsComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  user: UserModel;\n  firstUserState: UserModel;\n  subscriptions: Subscription[] = [];\n  isLoading$: Observable<boolean>;\n\n  constructor(private userService: AuthService, private fb: FormBuilder) {\n    this.isLoading$ = this.userService.isLoadingSubject.asObservable();\n  }\n\n  ngOnInit(): void {\n    const sb = this.userService.currentUserSubject.asObservable().pipe(\n      first(user => !!user)\n    ).subscribe(user => {\n      this.user = Object.assign({}, user);\n      this.firstUserState = Object.assign({}, user);\n      this.loadForm();\n    });\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  loadForm() {\n    this.formGroup = this.fb.group({\n      emailNotification: [this.user.emailSettings.emailNotification],\n      sendCopyToPersonalEmail: [this.user.emailSettings.sendCopyToPersonalEmail],\n      youHaveNewNotifications: [this.user.emailSettings.activityRelatesEmail.youHaveNewNotifications],\n      youAreSentADirectMessage: [this.user.emailSettings.activityRelatesEmail.youAreSentADirectMessage],\n      someoneAddsYouAsAsAConnection: [this.user.emailSettings.activityRelatesEmail.someoneAddsYouAsAsAConnection],\n      uponNewOrder: [this.user.emailSettings.activityRelatesEmail.uponNewOrder],\n      newMembershipApproval: [this.user.emailSettings.activityRelatesEmail.newMembershipApproval],\n      memberRegistration: [this.user.emailSettings.activityRelatesEmail.memberRegistration],\n      newsAboutKeenthemesProductsAndFeatureUpdates:\n        [this.user.emailSettings.updatesFromKeenthemes.newsAboutKeenthemesProductsAndFeatureUpdates],\n      tipsOnGettingMoreOutOfKeen: [this.user.emailSettings.updatesFromKeenthemes.tipsOnGettingMoreOutOfKeen],\n      thingsYouMissedSindeYouLastLoggedIntoKeen: [this.user.emailSettings.updatesFromKeenthemes.thingsYouMissedSindeYouLastLoggedIntoKeen],\n      newsAboutMetronicOnPartnerProductsAndOtherServices:\n        [this.user.emailSettings.updatesFromKeenthemes.newsAboutMetronicOnPartnerProductsAndOtherServices],\n      tipsOnMetronicBusinessProducts: [this.user.emailSettings.updatesFromKeenthemes.tipsOnMetronicBusinessProducts]\n    });\n  }\n\n  save() {\n    this.formGroup.markAllAsTouched();\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const formValues = this.formGroup.value;\n    this.user = Object.assign(this.user, {\n      emailSettings: {\n        emailNotification: formValues.emailNotification,\n        sendCopyToPersonalEmail: formValues.sendCopyToPersonalEmail,\n        activityRelatesEmail: {\n          youHaveNewNotifications: formValues.youHaveNewNotifications,\n          youAreSentADirectMessage: formValues.youAreSentADirectMessage,\n          someoneAddsYouAsAsAConnection: formValues.someoneAddsYouAsAsAConnection,\n          uponNewOrder: formValues.uponNewOrder,\n          newMembershipApproval: formValues.newMembershipApproval,\n          memberRegistration: formValues.memberRegistration\n        },\n        updatesFromKeenthemes: {\n          newsAboutKeenthemesProductsAndFeatureUpdates: formValues.newsAboutKeenthemesProductsAndFeatureUpdates,\n          tipsOnGettingMoreOutOfKeen: formValues.tipsOnGettingMoreOutOfKeen,\n          thingsYouMissedSindeYouLastLoggedIntoKeen: formValues.thingsYouMissedSindeYouLastLoggedIntoKeen,\n          newsAboutMetronicOnPartnerProductsAndOtherServices: formValues.newsAboutMetronicOnPartnerProductsAndOtherServices,\n          tipsOnMetronicBusinessProducts: formValues.tipsOnMetronicBusinessProducts\n        }\n      }\n    });\n\n    // Do request to your server for user update, we just imitate user update there\n    this.userService.isLoadingSubject.next(true);\n    setTimeout(() => {\n      this.userService.currentUserSubject.next(Object.assign({}, this.user));\n      this.userService.isLoadingSubject.next(false);\n    }, 2000);\n  }\n\n  cancel() {\n    this.user = Object.assign({}, this.firstUserState);\n    this.loadForm();\n  }\n}\n","<ng-container *ngIf=\"user\">\n  <div class=\"card card-custom\" [formGroup]=\"formGroup\">\n    <!-- begin::Loading -->\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"progress progress-modal\">\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\" role=\"progressbar\"\n          style=\"width: 100%\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n      </div>\n    </ng-container>\n    <!-- end::Loading -->\n    <!--begin::Header-->\n    <div class=\"card-header py-3\">\n      <div class=\"card-title align-items-start flex-column\">\n        <h3 class=\"card-label font-weight-bolder text-dark\">Email Settings</h3>\n        <span class=\"text-muted font-weight-bold font-size-sm mt-1\">Change your email settings</span>\n      </div>\n      <div class=\"card-toolbar\">\n        <button type=\"submit\" [disabled]=\"formGroup.invalid\" class=\"btn btn-success mr-2\" (click)=\"save()\">Save Changes</button>\n        <button type=\"reset\" class=\"btn btn-secondary\" (click)=\"cancel()\">Cancel</button>\n      </div>\n    </div>\n    <!--end::Header-->\n    <!--begin::Form-->\n    <div class=\"form\">\n      <div class=\"card-body\">\n        <div class=\"row\">\n          <label class=\"col-xl-3\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <h5 class=\"font-weight-bold mb-6\">Setup Email Notification:</h5>\n          </div>\n        </div>\n        <div class=\"form-group row align-items-center\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">Email\n            Notification</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <span class=\"switch switch-sm\">\n              <label>\n                <input type=\"checkbox\"\n                  formControlName=\"emailNotification\"\n                  />\n                <span></span>\n              </label>\n            </span>\n          </div>\n        </div>\n        <div class=\"form-group row align-items-center\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">Send Copy To Personal\n            Email</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <span class=\"switch switch-sm\">\n              <label>\n                <input type=\"checkbox\"\n                  formControlName=\"sendCopyToPersonalEmail\"\n                  />\n                <span></span>\n              </label>\n            </span>\n          </div>\n        </div>\n        <div class=\"separator separator-dashed my-10\"></div>\n        <div class=\"row\">\n          <label class=\"col-xl-3\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <h5 class=\"font-weight-bold mb-6\">Activity Related Emails:</h5>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">When To Email</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"checkbox-list\">\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"youHaveNewNotifications\" />\n                <span></span>You have new notifications</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"youAreSentADirectMessage\" />\n                <span></span>You're sent a direct message</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"someoneAddsYouAsAsAConnection\" />\n                <span></span>Someone adds you as a connection</label>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">When To Escalate\n            Emails</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"checkbox-list\">\n              <label class=\"checkbox checkbox-primary\">\n                <input type=\"checkbox\" formControlName=\"uponNewOrder\" />\n                <span></span>Upon new order</label>\n              <label class=\"checkbox checkbox-primary\">\n                <input type=\"checkbox\" formControlName=\"newMembershipApproval\" />\n                <span></span>New membership approval</label>\n              <label class=\"checkbox checkbox-primary\">\n                <input type=\"checkbox\" formControlName=\"memberRegistration\" />\n                <span></span>Member registration</label>\n            </div>\n          </div>\n        </div>\n        <div class=\"separator separator-dashed my-10\"></div>\n        <div class=\"row\">\n          <label class=\"col-xl-3\"></label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <h5 class=\"font-weight-bold mb-6\">Updates From Keenthemes:</h5>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label class=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">Email You\n            With</label>\n          <div class=\"col-lg-9 col-xl-6\">\n            <div class=\"checkbox-list\">\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"newsAboutKeenthemesProductsAndFeatureUpdates\" />\n                <span></span>News about Keenthemes products and feature updates</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"tipsOnGettingMoreOutOfKeen\">\n                <span></span>Tips on getting more out of Keen</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"thingsYouMissedSindeYouLastLoggedIntoKeen\" />\n                <span></span>Things you missed since you last logged into Keen</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"newsAboutMetronicOnPartnerProductsAndOtherServices\" />\n                <span></span>News about Metronic on partner products and other services</label>\n              <label class=\"checkbox\">\n                <input type=\"checkbox\" formControlName=\"tipsOnMetronicBusinessProducts\" />\n                <span></span>Tips on Metronic business products</label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--end::Form-->\n  </div>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { SubheaderService } from '../../_metronic/partials/layout';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  constructor(private subheader: SubheaderService) { }\n\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.subheader.setTitle('User Profile');\n      this.subheader.setBreadcrumbs([{\n        title: 'User profile',\n        linkText: 'User profile',\n        linkPath: '/user-profile'\n      }]);\n    }, 1);\n  }\n}\n","<!--begin::Profile Overview-->\n<div class=\"d-flex flex-row\">\n  <!--begin::Aside-->\n  <div class=\"flex-row-auto offcanvas-mobile w-300px w-xl-350px\" id=\"kt_profile_aside\">\n    <app-profile-card></app-profile-card>\n  </div>\n  <!--end::Aside-->\n\n  <!--begin::Content-->\n  <div class=\"flex-row-fluid ml-lg-8\">\n    <router-outlet></router-outlet>\n  </div>\n  <!--end::Content-->\n</div>\n<!--end::Profile Overview-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { NgbAlertModule, NgbDropdownModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { WidgetsModule } from '../../_metronic/partials/content/widgets/widgets.module';\nimport { DropdownMenusModule } from '../../_metronic/partials/content/dropdown-menus/dropdown-menus.module';\nimport { UserProfileComponent } from './user-profile.component';\nimport { ProfileOverviewComponent } from './profile-overview/profile-overview.component';\nimport { PersonalInformationComponent } from './personal-information/personal-information.component';\nimport { AccountInformationComponent } from './account-information/account-information.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { EmailSettingsComponent } from './email-settings/email-settings.component';\nimport { SavedCreditCardsComponent } from './saved-credit-cards/saved-credit-cards.component';\nimport { TaxInformationComponent } from './tax-information/tax-information.component';\nimport { StatementsComponent } from './statements/statements.component';\nimport { UserProfileRoutingModule } from './user-profile-routing.module';\nimport { ProfileCardComponent } from './_components/profile-card/profile-card.component';\nimport { SharedAppModule } from '@shared/shared.module';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CoreModule } from '../../_metronic/core';\nimport { ProfilePaymentsInformationComponent } from './payments-information/payments-information.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { UserProfileService } from '../auth/_services/user-profile.service';\n\n@NgModule({\n  declarations: [\n    UserProfileComponent,\n    ProfileOverviewComponent,\n    PersonalInformationComponent,\n    AccountInformationComponent,\n    ChangePasswordComponent,\n    EmailSettingsComponent,\n    SavedCreditCardsComponent,\n    TaxInformationComponent,\n    StatementsComponent,\n    ProfileCardComponent,\n    ProfilePaymentsInformationComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    CRUDTableModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InlineSVGModule,\n    UserProfileRoutingModule,\n    DropdownMenusModule,\n    NgbDropdownModule,\n    NgbTooltipModule,\n    WidgetsModule,\n    SharedAppModule,\n    ClipboardModule,\n    CoreModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    NgbAlertModule\n  ],\n  providers: [\n    UserProfileService\n  ]\n})\nexport class UserProfileModule {\n}\n","<ng-container *ngIf=\"user\">\n  <div class=\"card card-custom card-stretch\">\n    <!-- begin::Loading -->\n    <ng-container *ngIf=\"isLoading$ | async\">\n      <div class=\"progress progress-modal\">\n        <div\n            class=\"progress-bar progress-bar-striped progress-bar-animated bg-primary\"\n            role=\"progressbar\"\n            style=\"width: 100%\"\n            aria-valuenow=\"100\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n        ></div>\n      </div>\n    </ng-container>\n    <!-- end::Loading -->\n    <!--begin::Header-->\n    <div class=\"card-header py-3\">\n      <div class=\"card-title align-items-start flex-column\">\n        <h3 class=\"card-label font-weight-bolder text-dark\">Payment Information</h3>\n        <span class=\"text-muted font-weight-bold font-size-sm mt-1\">Update your payment information</span>\n      </div>\n    </div>\n    <!--end::Header-->\n    <!--begin::Form-->\n    <div class=\"form\">\n      <!--begin::Body-->\n      <div class=\"card-body\">\n        <form [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\"\n              [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n          <div class=\"form-group row\">\n            <label class=\"col-xl-3 col-lg-3 col-form-label\">First Name</label>\n            <div class=\"col-lg-9 col-xl-6\">\n              <input class=\"form-control form-control-lg form-control-solid\"\n                     type=\"text\"\n                     formControlName=\"first_name\"\n                     [class.is-invalid]=\"isControlInvalid('first_name')\"\n                     [class.is-valid]=\"isControlValid('first_name')\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-xl-3 col-lg-3 col-form-label\">Last Name</label>\n            <div class=\"col-lg-9 col-xl-6\">\n              <input class=\"form-control form-control-lg form-control-solid\"\n                     type=\"text\"\n                     formControlName=\"last_name\"\n                     [class.is-invalid]=\"isControlInvalid('last_name')\"\n                     [class.is-valid]=\"isControlValid('last_name')\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-xl-3 col-lg-3 col-form-label\">Phone</label>\n            <div class=\"col-lg-9 col-xl-6\">\n              <input class=\"form-control form-control-lg form-control-solid\"\n                     type=\"text\"\n                     formControlName=\"phone\"\n                     [class.is-invalid]=\"isControlInvalid('phone')\"\n                     [class.is-valid]=\"isControlValid('phone')\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-xl-3 col-lg-3 col-form-label\">Email</label>\n            <div class=\"col-lg-9 col-xl-6\">\n              <input class=\"form-control form-control-lg form-control-solid\"\n                     type=\"text\"\n                     formControlName=\"email\"\n                     [class.is-invalid]=\"isControlInvalid('email')\"\n                     [class.is-valid]=\"isControlValid('email')\"\n              />\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label class=\"col-xl-3 col-lg-3 col-form-label\"></label>\n            <div class=\"col-lg-9 col-xl-6\">\n              <button [disabled]=\"form.invalid || submitted\" class=\"btn btn-primary btn-elevate\"\n                      type=\"submit\">\n                Save\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <!--end::Body-->\n    </div>\n    <!--end::Form-->\n  </div>\n</ng-container>\n\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, UserModel } from '../../auth';\nimport { Observable, Subscription } from 'rxjs';\nimport { Constants } from '@core/configs/constants';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserProfileService } from '../../auth/_services/user-profile.service';\n\n@Component({\n  selector: 'app-personal-information',\n  templateUrl: './personal-information.component.html',\n  styleUrls: ['./personal-information.component.scss']\n})\nexport class PersonalInformationComponent implements OnInit, OnDestroy {\n  submitted: boolean;\n\n  form: FormGroup;\n\n  validationMessages = {\n    name: {\n      required: 'Name is required.',\n      minlength: 'Name must be at least 3 characters.',\n      maxlength: 'Name can\\'t be longer than 200 characters.'\n    },\n    minimum_payment: {\n      required: 'Minimum payment amounts is required.',\n      number: 'Invalid amount.'\n    },\n    phone: {\n      phoneFormat: 'Invalid phone number.'\n    }\n  };\n\n  user: UserModel;\n  firstUserState: UserModel;\n  subscriptions: Subscription[] = [];\n  // avatarPic = 'none';\n  isLoading$: Observable<boolean>;\n\n  constants = Constants;\n\n  constructor(private fb: FormBuilder,\n              public snackBar: MatSnackBar,\n              private userProfileService: UserProfileService,\n              private authService: AuthService) {\n    this.isLoading$ = this.authService.isLoadingSubject.asObservable();\n\n    this.form = this.fb.group({\n      first_name: ['', Validators.compose([Validators.required])],\n      last_name: ['', Validators.compose([Validators.required])],\n      phone: ['', Validators.compose([Validators.required])],\n      email: ['', Validators.compose([Validators.required, Validators.email])]\n    });\n  }\n\n  ngOnInit() {\n    const sb = this.authService.currentUserSubject.asObservable().pipe(\n      // first(user => !!user)\n    ).subscribe(user => {\n      console.log(user);\n      this.user = Object.assign({}, user);\n      this.firstUserState = Object.assign({}, user);\n      this.form.patchValue(user);\n    });\n    this.subscriptions.push(sb);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sb => sb.unsubscribe());\n  }\n\n  async onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n\n    // const { name } = this.form.value;\n    console.log(this.form.value);\n\n    const {first_name, last_name, phone, email} = this.form.value;\n    const body = {\n      first_name,\n      last_name,\n      name: first_name + ' ' + last_name,\n      phone,\n      email,\n    };\n    console.log(body);\n\n    try {\n      const result: any = await this.userProfileService.updateProfile(body).toPromise();\n      // const result = null;\n      if (result) {\n        this.authService.currentUserSubject.next(Object.assign({}, result.data));\n        this.snackBar.open('Personal information has been updated successfully', 'Success', {\n          duration: 2000,\n        });\n      }\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n      this.snackBar.open(error.error.meta.messages, 'Error', {\n        duration: 2000,\n        panelClass: ['bg-danger']\n      });\n    }\n    this.submitted = false;\n  }\n\n  // helpers for View\n  isControlValid(controlName: string): boolean {\n    const control = this.form.controls[controlName];\n    return control.valid && (control.dirty || control.touched);\n  }\n\n  isControlInvalid(controlName: string): boolean {\n    const control = this.form.controls[controlName];\n    return control.invalid && (control.dirty || control.touched);\n  }\n}\n"]}