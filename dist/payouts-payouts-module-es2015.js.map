{"version":3,"sources":["./src/app/pages/payouts/payouts-routing.module.ts","./src/app/pages/payouts/payouts.component.ts","./src/app/pages/payouts/payouts.component.html","./src/app/pages/payouts/payouts.module.ts"],"names":[],"mappings":"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","file":"payouts-payouts-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PayoutsComponent } from '@pages/payouts/payouts.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PayoutsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PayoutsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService, UserModel } from '../../modules/auth';\nimport { ApiService } from '@core/services/api.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-payouts',\n  templateUrl: './payouts.component.html',\n  styleUrls: ['./payouts.component.scss']\n})\nexport class PayoutsComponent implements OnInit {\n  user$: Observable<UserModel>;\n  data$: Observable<any>;\n  paymentInfo$: Observable<any>;\n\n  submitted: boolean;\n  form: FormGroup;\n\n  alert: {\n    type: string;\n    message: string\n  };\n\n  constructor(private auth: AuthService,\n              private apiService: ApiService,\n              private fb: FormBuilder,\n              public snackBar: MatSnackBar) {\n    this.user$ = this.auth.currentUserSubject.asObservable();\n\n    this.form = this.fb.group({\n      type: ['paypal', Validators.compose([\n        Validators.required\n      ])]\n    });\n\n    this.paymentInfo$ = this.auth.paymentGet().pipe(map((res: any) => res.data[0]));\n  }\n\n  ngOnInit(): void {\n    this.data$ = this.apiService.get('/transactions');\n  }\n\n  async onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n\n    // const { name } = this.form.value;\n    console.log(this.form.value);\n\n    this.submitted = false;\n  }\n\n  async onRequest(user: UserModel) {\n    this.alert = null;\n    try {\n      const res: any = await this.apiService.post('/transactions', {\n        user_id: user.id\n      }).toPromise();\n      if (res.data) {\n        this.snackBar.open('We have received your request', 'Success', {\n          duration: 2000,\n        });\n      }\n\n    } catch (error) {\n      console.log(error);\n      this.snackBar.open(error.error.meta.messages, 'Error', {\n        duration: 2000,\n        panelClass: ['bg-danger']\n      });\n    }\n\n  }\n}\n","<ng-container *ngIf=\"user$ | async as user\">\n  <div class=\"card card-custom mb-5\">\n    <div class=\"card-body\" *ngIf=\"paymentInfo$ | async as paymentInfo\">\n      <ng-container *ngIf=\"paymentInfo;else templateNoPaymentInfo\">\n        <div class=\"row\">\n        <div class=\"col-sm-6 offset-sm-3\">\n          <div\n                  class=\"rounded d-flex align-items-center justify-content-between text-white position-relative ml-auto px-7 py-5 bgi-no-repeat bgi-size-cover bgi-position-center\"\n                  style=\"background-image: url('/assets/media/svg/shapes/abstract-9.svg');\">\n            <div class=\"font-weight-boldest font-size-h5 text-uppercase\">{{ 'TITLE.total_amount' | translate }}</div>\n            <div class=\"text-right d-flex flex-column\">\n              <div class=\"d-flex align-items-center\">\n                <span class=\"font-weight-boldest font-size-h3 line-height-sm mr-2\">{{ user.balance }}</span>\n                <img width=\"18\" src=\"./assets/media/svg/customs/coin.svg\" alt=\"\">\n              </div>\n              <!--        <span class=\"font-size-sm\">Taxes included</span>-->\n            </div>\n          </div>\n          <form class=\"mt-5\" [formGroup]=\"form\" novalidate (ngSubmit)=\"onSubmit()\"\n                [ngClass]=\"{'ng-was-validated-invalid': submitted}\">\n\n            <div class=\"form-group\">\n              <mat-radio-group formControlName=\"type\">\n                <mat-radio-button [disabled]=\"!paymentInfo.paypal_email\" class=\"d-block mt-2 mr-0\" value=\"paypal\">\n                    Paypal (<a [routerLink]=\"['/user-profile/payment-information']\" href=\"#\">{{ 'BUTTON.edit' | translate }}</a>)\n                </mat-radio-button>\n                <mat-radio-button [disabled]=\"!paymentInfo.bank_account_name\" class=\"d-block mt-2 mr-0\" value=\"bank\">\n                  Bank Wire Transfer (<a [routerLink]=\"['/user-profile/payment-information']\" href=\"#\">{{ 'BUTTON.edit' | translate }}</a>)\n                </mat-radio-button>\n                <mat-radio-button [disabled]=\"!paymentInfo.payoneer_email\" class=\"d-block mt-2 mr-0\" value=\"payoneer\">\n                    Payoneer (<a [routerLink]=\"['/user-profile/payment-information']\" href=\"#\">{{ 'BUTTON.edit' | translate }}</a>)\n                </mat-radio-button>\n              </mat-radio-group>\n            </div>\n\n            <div class=\"form-group text-center\">\n              <button (click)=\"onRequest(user)\" type=\"submit\" class=\"btn btn-primary px-20\">{{ 'BUTTON.submit' | translate }}</button>\n            </div>\n          </form>\n        </div>\n      </div>\n      </ng-container>\n      <ng-template #templateNoPaymentInfo>\n        <ngb-alert [dismissible]=\"false\">\n          <div class=\"text-center h4\">\n            <p>You need to link a payment method to your account.</p>\n            <p>You can add a payment methods in <a [routerLink]=\"['/user-profile/payment-information']\" href=\"#\">Payment Settings</a></p>\n          </div>\n        </ngb-alert>\n      </ng-template>\n    </div>\n  </div>\n  <div class=\"card card-custom mb-5\">\n    <div class=\"card-body\">\n      <!-- begin:Table -->\n      <div *ngIf=\"data$ | async as transactions\" class=\"table-responsive angular-bootstrap-table\">\n        <table\n                class=\"table table-head-custom table-vertical-center overflow-hidden\"\n        >\n          <thead>\n          <th class=\"text-center\">\n            Request date\n          </th>\n          <th class=\"text-center\" [style.width.px]=\"160\">\n            Payment method\n          </th>\n          <th class=\"text-center\" [style.width.px]=\"160\">\n            Amount\n          </th>\n          <th class=\"text-center\" [style.width.px]=\"120\">\n            Status\n          </th>\n          <th class=\"text-center\" [style.width.px]=\"120\">\n            Payout date\n          </th>\n          </thead>\n          <tbody>\n          <tr *ngFor=\"let item of transactions.data\">\n            <td class=\"text-center\">{{ item.date_request | date: 'dd/MM/yyyy' }}</td>\n            <td class=\"text-center\">\n              <span class=\"text-uppercase\">{{ item.payment_type }}</span>\n            </td>\n            <td class=\"text-center\">{{ item.request_sum }}</td>\n            <td class=\"text-center\">\n              <span\n                      class=\"label label-lg label-inline\"\n                      [class.label-light-primary]=\"item.status === 'pending'\"\n                      [class.label-light-success]=\"item.status === 'paid'\"\n                      [class.label-mute]=\"item.status === 'declined'\"\n              >\n              <ng-container *ngIf=\"item.status === 'pending'\">waiting</ng-container>\n              <ng-container *ngIf=\"item.status === 'paid'\">Shared</ng-container>\n              <ng-container *ngIf=\"item.status === 'declined'\">Closed</ng-container>\n            </span>\n            </td>\n            <td class=\"text-center\">{{ item.date_payout ? (item.date_payout | date: 'dd/MM/yyyy') : '-' }}</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n      <!-- end: Table -->\n    </div>\n  </div>\n\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PayoutsRoutingModule } from './payouts-routing.module';\nimport { PayoutsComponent } from './payouts.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { CRUDTableModule } from '../../_metronic/shared/crud-table';\nimport { InlineSVGModule } from 'ng-inline-svg';\nimport { SharedAppModule } from '@shared/shared.module';\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TranslationModule } from '../../modules/i18n/translation.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [PayoutsComponent],\n  imports: [\n    CommonModule,\n    PayoutsRoutingModule,\n    MatRadioModule,\n    CRUDTableModule,\n    InlineSVGModule,\n    SharedAppModule,\n    NgbAlertModule,\n    TranslationModule,\n    MatSnackBarModule\n  ]\n})\nexport class PayoutsModule { }\n"],"sourceRoot":"webpack:///"}